const t=4,e=1,n=function(t,e){let n={};return t.forEach(t=>{for(let r=0;r<t.length;r+=1){let o=t.slice(r,r+e);if(o.length===e){let t=o.join(" ");n.hasOwnProperty(t)?n[t].count+=1:n[t]={size:e,count:1}}}}),Object.keys(n).map(t=>(n[t].normal=t,n[t]))},r=function(r,o){o.size&&(o.min=o.size,o.max=o.size);let i=o.max||t,s=[];for(let t=o.min||e;t<=i;t+=1)s=s.concat(n(r,t));return s},o=4,i=1,s=function(t,e){let n={};return t.forEach(t=>{for(let r=0;r<=t.length;r+=1){let o=t.slice(0,r);if(o.length===e){let t=o.join(" ");n.hasOwnProperty(t)?n[t].count+=1:n[t]={size:e,count:1}}}}),Object.keys(n).map(t=>(n[t].normal=t,n[t]))},a=function(t,e){e.size&&(e.min=e.size,e.max=e.size);let n=e.max||o,r=[];for(let o=e.min||i;o<=n;o++)r=r.concat(s(t,o));return r},p=4,m=1,u=function(t,e){let n={};return t.forEach(t=>{let r=t.length;for(let o=0;o<=t.length;o+=1){let i=t.slice(r-o,r);if(i.length===e){let t=i.join(" ");n.hasOwnProperty(t)?n[t].count+=1:n[t]={size:e,count:1}}}}),Object.keys(n).map(t=>(n[t].normal=t,n[t]))},c=function(t,e){e.size&&(e.min=e.size,e.max=e.size);let n=e.max||p,r=[];for(let o=e.min||m;o<=n;o++)r=r.concat(u(t,o));return r},l=function(t){return t.json({text:!1}).map(t=>t.terms.map(t=>t.normal))},f=function(t){return t=t.sort((t,e)=>t.count>e.count?-1:t.count<e.count?1:t.size>e.size?-1:t.size<e.size?1:0)};var y={api:function(t){!function(t){t.prototype.ngrams=function(t){let e=l(this),n=r(e,t||{});return n=f(n),n},t.prototype.nGrams=t.prototype.ngrams,t.prototype.ngram=t.prototype.ngrams,t.prototype.unigrams=function(t){let e=r(l(this),{max:1,min:1});return e=f(e),"number"==typeof t&&(e=e[t]),e},t.prototype.uniGrams=t.prototype.unigrams,t.prototype.bigrams=function(t){let e=r(l(this),{max:2,min:2});return e=f(e),"number"==typeof t&&(e=e[t]),e},t.prototype.biGrams=t.prototype.bigrams,t.prototype.trigrams=function(t){let e=r(l(this),{max:3,min:3});return e=f(e),"number"==typeof t&&(e=e[t]),e},t.prototype.triGrams=t.prototype.trigrams,t.prototype.startgrams=function(t){let e=l(this),n=a(e,t||{});return n=f(n),n},t.prototype.startGrams=t.prototype.startgrams,t.prototype.endgrams=function(t){let e=l(this),n=c(e,t||{});return n=f(n),n},t.prototype.endGrams=t.prototype.endgrams,t.prototype.edgegrams=function(t){let e=l(this),n=a(e,t||{}),r=c(e,t||{}),o=n.concat(r).reduce((t,e)=>(t[e.normal]?t[e.normal].count+=e.count:t[e.normal]=e,t),{}),i=Object.keys(o).map(t=>o[t]);return i=f(i),i},t.prototype.edgeGrams=t.prototype.edgegrams}(t),function(t){t.prototype.tfidf=function(t){return[]}}(t)}};export{y as default};
