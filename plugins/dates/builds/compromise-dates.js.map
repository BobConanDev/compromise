{"version":3,"file":"compromise-dates.js","sources":["../src/tagger/00-basic.js","../src/tagger/01-values.js","../src/tagger/02-dates.js","../src/tagger/03-sections.js","../src/tagger/04-time.js","../src/tagger/05-shifts.js","../src/tagger/06-fixup.js","../src/tagger/index.js","../src/tags.js","../src/words/dates.js","../src/words/durations.js","../src/words/holidays.js","../src/words/times.js","../src/words/index.js","../src/parse/01-normalize.js","../node_modules/spacetime/builds/spacetime.mjs","../src/parse/toDate/tokenize/01-shift.js","../src/parse/toDate/tokenize/02-time.js","../src/parse/toDate/tokenize/03-relative.js","../src/parse/toDate/units/Unit.js","../src/parse/toDate/units/index.js","../src/parse/toDate/01-namedUnit.js","../node_modules/spacetime-holiday/builds/spacetime-holiday.js","../src/parse/toDate/02-holidays.js","../src/parse/toDate/03-explicit.js","../src/parse/toDate/index.js","../src/parse/02-parse-range.js","../src/parse/index.js","../src/abbrevs.js","../src/index.js"],"sourcesContent":["//ambiguous 'may' and 'march'\nconst preps = '(in|by|before|during|on|until|after|of|within|all)' //6\nconst thisNext = '(last|next|this|previous|current|upcoming|coming)' //2\nconst sections = '(start|end|middle|starting|ending|midpoint|beginning)' //2\nconst seasons = '(spring|summer|winter|fall|autumn)'\n\n//ensure a year is approximately typical for common years\n//please change in one thousand years\nconst tagYear = (m, reason) => {\n  if (m.found !== true) {\n    return\n  }\n  let term = m.termList()[0]\n  if (term) {\n    let num = parseInt(term.clean, 10)\n    if (num && num > 1000 && num < 3000) {\n      m.tag('Year', reason)\n    }\n  }\n}\n//same, but for less-confident values\nconst tagYearSafe = (m, reason) => {\n  if (m.found !== true) {\n    return\n  }\n  let term = m.termList()[0]\n  if (term) {\n    let num = parseInt(term.clean, 10)\n    if (num && num > 1900 && num < 2030) {\n      m.tag('Year', reason)\n    }\n  }\n}\n\nconst fixDates = function(doc) {\n  doc.match('in the (night|evening|morning|afternoon|day|daytime)').tag('Time', 'in-the-night')\n  doc.match('(#Value|#Time) (am|pm)').tag('Time', 'value-ampm')\n\n  //months:\n  let month = doc.if('#Month')\n  if (month.found === true) {\n    //June 5-7th\n    month.match(`#Month #DateRange+`).tag('Date', 'correction-numberRange')\n    //5th of March\n    month.match('#Value of #Month').tag('Date', 'value-of-month')\n    //5 March\n    month.match('#Cardinal #Month').tag('Date', 'cardinal-month')\n    //march 5 to 7\n    month.match('#Month #Value to #Value').tag('Date', 'value-to-value')\n    //march the 12th\n    month.match('#Month the #Value').tag('Date', 'month-the-value')\n  }\n\n  //months:\n  let val = doc.if('#Value')\n  if (val.found === true) {\n    //june 7\n    val\n      .match('(#WeekDay|#Month) #Value')\n      .ifNo('#Money')\n      .tag('Date', 'date-value')\n\n    //7 june\n    val\n      .match('#Value (#WeekDay|#Month)')\n      .ifNo('#Money')\n      .tag('Date', 'value-date')\n\n    //may twenty five\n    val\n      .match('#TextValue #TextValue')\n      .if('#Date')\n      .tag('#Date', 'textvalue-date')\n\n    //eg 'year'\n    let duration = val.if('#Duration')\n    if (duration.found === true) {\n      //for 4 months\n      duration.match('for #Value #Duration').tag('Date', 'for-x-duration')\n      //two days before\n      duration.match('#Value #Duration #Conjunction').tag('Date', 'val-duration-conjunction')\n      //for four days\n      duration.match(`${preps}? #Value #Duration`).tag('Date', 'value-duration')\n      //two years old\n      duration.match('#Value #Duration old').unTag('Date', 'val-years-old')\n    }\n  }\n\n  //seasons\n  let season = doc.if(seasons)\n  if (season.found === true) {\n    season.match(`${preps}? ${thisNext} ${seasons}`).tag('Date', 'thisNext-season')\n    season.match(`the? ${sections} of ${seasons}`).tag('Date', 'section-season')\n    season.match(`${seasons} ${preps}? #Cardinal`).tag('Date', 'season-year')\n  }\n\n  //rest-dates\n  let date = doc.if('#Date')\n  if (date.found === true) {\n    //june the 5th\n    date.match('#Date the? #Ordinal').tag('Date', 'correction')\n    //last month\n    date.match(`${thisNext} #Date`).tag('Date', 'thisNext')\n    //by 5 March\n    date.match('due? (by|before|after|until) #Date').tag('Date', 'by')\n    //next feb\n    date\n      .match('(last|next|this|previous|current|upcoming|coming|the) #Date')\n      .tag('Date', 'next-feb')\n    //start of june\n    date.match(`the? ${sections} of #Date`).tag('Date', 'section-of')\n    //fifth week in 1998\n    date.match('#Ordinal #Duration in #Date').tag('Date', 'duration-in')\n    //early in june\n    date.match('(early|late) (at|in)? the? #Date').tag('Time', 'early-evening')\n    //tomorrow before 3\n    date\n      .match('#Date (by|before|after|at|@|about) #Cardinal')\n      .not('^#Date')\n      .tag('Time', 'date-before-Cardinal')\n    //saturday am\n    date\n      .match('#Date [(am|pm)]')\n      .unTag('Verb')\n      .unTag('Copula')\n      .tag('Time', 'date-am')\n    //feb to june\n    date\n      .match('#Date (#Preposition|to) #Date')\n      .ifNo('#Duration')\n      .tag('Date', 'date-prep-date')\n  }\n\n  //year/cardinal tagging\n  let cardinal = doc.if('#Cardinal')\n  if (cardinal.found === true) {\n    let v = cardinal.match(`#Date #Value [#Cardinal]`)\n    tagYear(v, 'date-value-year')\n    //scoops up a bunch\n    v = cardinal.match(`#Date+ [#Cardinal]`)\n    tagYear(v, 'date-year')\n    //feb 8 2018\n    v = cardinal.match(`#Month #Value [#Cardinal]`)\n    tagYear(v, 'month-value-year')\n    //feb 8 to 10th 2018\n    v = cardinal.match(`#Month #Value to #Value [#Cardinal]`)\n    tagYear(v, 'month-range-year')\n    //in 1998\n    v = cardinal.match(`(in|of|by|during|before|starting|ending|for|year) [#Cardinal]`)\n    tagYear(v, 'in-year')\n    //q2 2009\n    v = cardinal.match('(q1|q2|q3|q4) [#Cardinal]')\n    tagYear(v, 'in-year')\n    //2nd quarter 2009\n    v = cardinal.match('#Ordinal quarter [#Cardinal]')\n    tagYear(v, 'in-year')\n    //in the year 1998\n    v = cardinal.match('the year [#Cardinal]')\n    tagYear(v, 'in-year')\n    //it was 1998\n    v = cardinal.match('it (is|was) [#Cardinal]')\n    tagYearSafe(v, 'in-year')\n  }\n\n  let time = doc.if('#Time')\n  if (time.found === true) {\n    //by 6pm\n    time.match('(by|before|after|at|@|about) #Time').tag('Time', 'preposition-time')\n    //7 7pm\n    time\n      .match('#Cardinal #Time')\n      .not('#Year')\n      .tag('Time', 'value-time')\n    //2pm est\n    time.match('#Time [(eastern|pacific|central|mountain)]').tag('Time', 'timezone')\n    //6pm est\n    time.match('#Time [(est|pst|gmt)]').tag('Time', 'timezone abbr')\n  }\n\n  return doc\n}\nmodule.exports = fixDates\n","const here = 'date-values'\n//\nconst values = function(doc) {\n  if (doc.has('#Value')) {\n    //june 5 to 7th\n    doc.match('#Month #Value to #Value of? #Year?').tag('Date', here);\n    //5 to 7th june\n    doc.match('#Value to #Value of? #Month #Year?').tag('Date', here);\n    //third week of may\n    doc.match('#Value #Duration of #Date').tag('Date', here);\n    //two days after\n    doc.match('#Value+ #Duration (after|before|into|later|afterwards|ago)?').tag('Date', here);\n    //two days\n    doc.match('#Value #Date').tag('Date', here);\n    //june 5th\n    doc.match('#Date #Value').tag('Date', here);\n    //tuesday at 5\n    doc.match('#Date #Preposition #Value').tag('Date', here);\n    //tomorrow before 3\n    doc.match('#Date (after|before|during|on|in) #Value').tag('Date', here);\n    //a year and a half\n    doc.match('#Value (year|month|week|day) and a half').tag('Date', here);\n    //5 and a half years\n    doc.match('#Value and a half (years|months|weeks|days)').tag('Date', here);\n    //on the fifth\n    doc.match('on the #Ordinal').tag('Date', here);\n  }\n  return doc\n}\nmodule.exports = values\n","const here = 'date-tagger'\n//\nconst dateTagger = function(doc) {\n\n  doc.match('(spring|summer|winter|fall|autumn|springtime|wintertime|summertime)').match('#Noun').tag('Season', here)\n  doc.match('(q1|q2|q3|q4)').tag('FinancialQuarter', here)\n  doc.match('(this|next|last|current) quarter').tag('FinancialQuarter', here)\n  doc.match('(this|next|last|current) season').tag('Season', here)\n\n  if (doc.has('#Date')) {\n    //friday to sunday\n    doc.match('#Date #Preposition #Date').tag('Date', here);\n    //once a day..\n    doc.match('(once|twice) (a|an|each) #Date').tag('Date', here);\n    //TODO:fixme\n    doc.match('(by|until|on|in|at|during|over|every|each|due) the? #Date').tag('Date', here);\n    //tuesday\n    doc.match('#Date+').tag('Date', here);\n    //by June\n    doc.match('(by|until|on|in|at|during|over|every|each|due) the? #Date').tag('Date', here);\n    //a year after..\n    doc.match('a #Duration').tag('Date', here);\n    //between x and y\n    doc.match('(between|from) #Date').tag('Date', here);\n    doc.match('(to|until|upto) #Date').tag('Date', here);\n    doc.match('#Date and #Date').tag('Date', here);\n    //during this june\n    doc.match('(by|until|after|before|during|on|in|following) (next|this|last)? (#Date|#Date)').tag('Date', here);\n    //day after next\n    doc.match('the? #Date after next one?').tag('Date', here);\n    //approximately...\n    doc.match('(about|approx|approximately|around) #Date').tag('Date', here);\n  }\n  return doc\n}\nmodule.exports = dateTagger\n","const here = 'section-tagger'\n//\nconst sectionTagger = function(doc) {\n  if (doc.has('#Date')) {\n    // //next september\n    doc.match('this? (last|next|past|this|previous|current|upcoming|coming|the) #Date').tag('Date', here);\n    //starting this june\n    doc.match('(starting|beginning|ending) #Date').tag('Date', here);\n    //start of june\n    doc.match('the? (start|end|middle|beginning) of (last|next|this|the) (#Date|#Date)').tag('Date', here);\n    //this coming june\n    doc.match('(the|this) #Date').tag('Date', here);\n  }\n  return doc\n}\nmodule.exports = sectionTagger\n","const here = 'time-tagger'\n\n//\nconst timeTagger = function(doc) {\n  if (doc.has('#Time')) {\n    //eastern daylight time\n    doc.match('#Noun (standard|daylight|central|mountain)? time').tag('Timezone', here)\n  }\n  // https://raw.githubusercontent.com/davispuh/TimezoneParser/master/data/abbreviations.yml\n  if (doc.has('#Acronym')) {\n    let abbr =\n      '(acdt|acst|ace|dmt|ist|tse|addt|adt|aedt|aest|ahdt|ahst|akdt|akst|amt|nst|apt|awt|gmt|awdt|awst|bdst|bst|bdt|nwt|bmt|wet|bost|cddt|cdt|cet|cmt|cpt|cst|cwt|chst|gst|eat|eddt|edt|eest|eet|emt|ept|ewt|est|ffmt|fmt|hdt|hst|hkst|hkt|hmt|iddt|idt|jmt|imt|jdt|jst|kdt|kst|kmt|lst|mddt|mdst|msd|msk|mdt|mmt|mpt|pdt|pst|mst|mwt|nddt|ndt|npt|nzdt|nzmt|nzst|pddt|pkst|pkt|plmt|pmmt|pmt|ppmt|ppt|pwt|qmt|rmt|sast|sdmt|set|sjmt|smt|sst|tbmt|tmt|utc|wast|wemt|wib|wit|wita|wmt|yddt|ydt|ypt|ywt|yst)'\n    doc.match(abbr).tag('Timezone', here)\n  }\n  // quarter to seven\n  if (doc.has('#Cardinal')) {\n    doc.match('(half|quarter|25|15|10|5) (past|after|to) #Cardinal').tag('Time')\n  }\n  return doc\n}\nmodule.exports = timeTagger\n","const here = 'shift-tagger'\n//\nconst shiftTagger = function(doc) {\n  if (doc.has('#Date')) {\n    //two weeks before\n    doc.match('#Cardinal #Duration (before|after)').tag('#DateShift', here)\n    // in two weeks\n    doc.match('in #Cardinal #Duration').tag('#DateShift', here)\n    //two weeks and three days before\n    doc.match('#Cardinal #Duration and? #DateShift').tag('#DateShift', here)\n    doc.match('#DateShift and #Cardinal #Duration').tag('#DateShift', here)\n    // doc.match('#Cardinal #Duration and? #DateShift').tag('#DateShift', here)\n  }\n  return doc\n}\nmodule.exports = shiftTagger\n","const here = 'fix-tagger'\n//\nconst fixUp = function(doc) {\n  //fixups\n  if (doc.has('#Date')) {\n    //first day by monday\n    let oops = doc.match('#Date+ by #Date+')\n    if (oops.found && !oops.has('^due')) {\n      oops.match('^#Date+').unTag('Date', 'by-monday')\n    }\n\n    let d = doc.match('#Date+')\n    //'spa day'\n    d.match('^day$').unTag('Date', 'spa-day')\n\n    let knownDate = '(yesterday|today|tomorrow)'\n    if (d.has(knownDate)) {\n      //yesterday 7\n      d.match(`${knownDate} [#Value]$`).unTag('Date', 'yesterday-7')\n      //7 yesterday\n      d.match(`^[#Value] ${knownDate}$`).unTag('Date', '7 yesterday')\n      //friday yesterday\n      d.match(`#WeekDay+ ${knownDate}$`)\n        .unTag('Date')\n        .lastTerm()\n        .tag('Date', 'fri-yesterday')\n\n      // yesterday yesterday\n      // d.match(`${knownDate}+ ${knownDate}$`)\n      //   .unTag('Date')\n      //   .lastTerm()\n      //   .tag('Date', here)\n      d.match(`(this|last|next) #Date ${knownDate}$`)\n        .unTag('Date')\n        .lastTerm()\n        .tag('Date', 'this month yesterday')\n    }\n    //tomorrow on 5\n    d.match(`on #Cardinal$`).unTag('Date', here)\n    //this tomorrow\n    d.match(`this tomorrow`)\n      .terms(0)\n      .unTag('Date', 'this-tomorrow')\n    //q2 2019\n    d.match(`(q1|q2|q3|q4) #Year`).tag('Date', here)\n    //5 tuesday\n    // d.match(`^#Value #WeekDay`).terms(0).unTag('Date');\n    //5 next week\n    d.match(`^#Value (this|next|last)`)\n      .terms(0)\n      .unTag('Date', here)\n\n    if (d.has('(last|this|next)')) {\n      //this month 7\n      d.match(`(last|this|next) #Duration #Value`)\n        .terms(2)\n        .unTag('Date', here)\n      //7 this month\n      d.match(`!#Month #Value (last|this|next) #Date`)\n        .terms(0)\n        .unTag('Date', here)\n    }\n    //january 5 5\n    if (d.has('(#Year|#Time|#TextValue|#NumberRange)') === false) {\n      d.match('(#Month|#WeekDay) #Value #Value')\n        .terms(2)\n        .unTag('Date', here)\n    }\n    //between june\n    if (d.has('^between') && !d.has('and .')) {\n      d.unTag('Date', here)\n    }\n    //june june\n    if (d.has('#Month #Month') && !d.has('@hasHyphen') && !d.has('@hasComma')) {\n      d.match('#Month')\n        .lastTerm()\n        .unTag('Date', 'month-month')\n    }\n  }\n  return doc\n}\nmodule.exports = fixUp\n","const methods = [\n  require('./00-basic'),\n  require('./01-values'),\n  require('./02-dates'),\n  require('./03-sections'),\n  require('./04-time'),\n  require('./05-shifts'),\n  require('./06-fixup'),\n]\n// run each of the taggers\nconst tagDate = function(doc) {\n  methods.forEach(fn => fn(doc))\n  return doc\n}\nmodule.exports = tagDate\n","module.exports = {\n  FinancialQuarter: {\n    isA: 'Date',\n  },\n  // 'summer'\n  Season: {\n    isA: 'Date',\n  },\n  // '1982'\n  Year: {\n    isA: ['Date'],\n    notA: 'RomanNumeral',\n  },\n  // 'months'\n  Duration: {\n    isA: ['Date', 'Noun'],\n  },\n  // 'easter'\n  Holiday: {\n    isA: ['Date', 'Noun'],\n  },\n  // 'PST'\n  Timezone: {\n    isA: ['Date', 'Noun'],\n  },\n  // 'two weeks before'\n  DateShift: {\n    isA: ['Date'],\n  },\n}\n","module.exports = [\n  'weekday',\n\n  'summer',\n  'winter',\n  'autumn',\n\n  'some day',\n  'one day',\n  'all day',\n  'some point',\n\n  'eod',\n  'eom',\n  'standard time',\n  'daylight time',\n]\n","module.exports = [\n  'centuries',\n  'century',\n  'day',\n  'days',\n  'decade',\n  'decades',\n  'hour',\n  'hours',\n  'millisecond',\n  'milliseconds',\n  'minute',\n  'minutes',\n  'month',\n  'months',\n  'seconds',\n  'week',\n  'weeks',\n  'year',\n  'years',\n]\n","module.exports = [\n  'all hallows eve',\n  'all saints day',\n  'all sts day',\n  'april fools',\n  'armistice day',\n  'australia day',\n  'bastille day',\n  'boxing day',\n  'canada day',\n  'christmas eve',\n  'christmas',\n  'cinco de mayo',\n  'day of the dead',\n  'dia de muertos',\n  'dieciseis de septiembre',\n  'emancipation day',\n  'grito de dolores',\n  'groundhog day',\n  'halloween',\n  'harvey milk day',\n  'inauguration day',\n  'independence day',\n  'independents day',\n  'juneteenth',\n  'labour day',\n  'national freedom day',\n  'national nurses day',\n  'new years eve',\n  'new years',\n  'purple heart day',\n  'rememberance day',\n  'rosa parks day',\n  'saint andrews day',\n  'saint patricks day',\n  'saint stephens day',\n  'saint valentines day',\n  'st andrews day',\n  'st patricks day',\n  'st stephens day',\n  'st valentines day ',\n  'valentines day',\n  'valentines',\n  'veterans day',\n  'victoria day',\n  'womens equality day',\n  'xmas',\n  // Fixed religious and cultural holidays\n  // Catholic + Christian\n  'epiphany',\n  'orthodox christmas day',\n  'orthodox new year',\n  'assumption of mary',\n  'all souls day',\n  'feast of the immaculate conception',\n  'feast of our lady of guadalupe',\n\n  // Kwanzaa\n  'kwanzaa',\n  // Pagan / metal 🤘\n  'imbolc',\n  'beltaine',\n  'lughnassadh',\n  'samhain',\n  'martin luther king day',\n  'mlk day',\n  'presidents day',\n  'mardi gras',\n  'tax day',\n  'commonwealth day',\n  'mothers day',\n  'memorial day',\n  'fathers day',\n  'columbus day',\n  'indigenous peoples day',\n  'canadian thanksgiving',\n  'election day',\n  'thanksgiving',\n  't-day',\n  'turkey day',\n  'black friday',\n  'cyber monday',\n  // Astronomical religious and cultural holidays\n  'ash wednesday',\n  'palm sunday',\n  'maundy thursday',\n  'good friday',\n  'holy saturday',\n  'easter',\n  'easter sunday',\n  'easter monday',\n  'orthodox good friday',\n  'orthodox holy saturday',\n  'orthodox easter',\n  'orthodox easter monday',\n  'ascension day',\n  'pentecost',\n  'whitsunday',\n  'whit sunday',\n  'whit monday',\n  'trinity sunday',\n  'corpus christi',\n  'advent',\n  // Jewish\n  'tu bishvat',\n  'tu bshevat',\n  'purim',\n  'passover',\n  'yom hashoah',\n  'lag baomer',\n  'shavuot',\n  'tisha bav',\n  'rosh hashana',\n  'yom kippur',\n  'sukkot',\n  'shmini atzeret',\n  'simchat torah',\n  'chanukah',\n  'hanukkah',\n  // Muslim\n  'isra and miraj',\n  'lailat al-qadr',\n  'eid al-fitr',\n  'id al-Fitr',\n  'eid ul-Fitr',\n  'ramadan',\n  'eid al-adha',\n  'muharram',\n  'the prophets birthday',\n  'ostara',\n  'march equinox',\n  'vernal equinox',\n  'litha',\n  'june solistice',\n  'summer solistice',\n  'mabon',\n  'september equinox',\n  'fall equinox',\n  'autumnal equinox',\n  'yule',\n  'december solstice',\n  'winter solstice',\n  // Additional important holidays\n  'chinese new year',\n  'diwali',\n]\n","module.exports = [\n  'noon',\n  'midnight',\n  'now',\n  'morning',\n  'tonight',\n  'evening',\n  'afternoon',\n  'night',\n  'breakfast time',\n  'lunchtime',\n  'dinnertime',\n  'ago',\n  'sometime',\n  'eod',\n  'oclock',\n  'oclock',\n  'all day',\n  'at night',\n]\n","let lex = {}\n\nconst data = [\n  [require('./dates'), ['#Date']],\n  [require('./durations'), ['#Duration']],\n  [require('./holidays'), ['#Holiday']],\n  [require('./times'), ['#Time']],\n]\ndata.forEach(a => {\n  for (let i = 0; i < a[0].length; i++) {\n    lex[a[0][i]] = a[1]\n  }\n})\n\nmodule.exports = lex\n","const normalize = function(doc) {\n  doc = doc.clone()\n\n  if (!doc.numbers) {\n    console.warn(\"Compromise: compromise-dates cannot find plugin dependency 'compromise-number'\")\n  } else {\n    // convert 'two' to 2\n    let num = doc.numbers()\n    num.toNumber()\n    num.toCardinal()\n  }\n  // remove adverbs\n  doc.adverbs().remove()\n  return doc\n}\nmodule.exports = normalize\n","function createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nfunction getCjsExportFromNamespace (n) {\n\treturn n && n['default'] || n;\n}\n\nvar fns = createCommonjsModule(function (module, exports) {\n//git:blame @JuliasCaesar https://www.timeanddate.com/date/leapyear.html\nexports.isLeapYear = year => (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n// unsurprisingly-nasty `typeof date` call\nexports.isDate = d => Object.prototype.toString.call(d) === '[object Date]' && !isNaN(d.valueOf());\nexports.isArray = input => Object.prototype.toString.call(input) === '[object Array]';\nexports.isObject = input => Object.prototype.toString.call(input) === '[object Object]';\n\nexports.zeroPad = (str, len = 2) => {\n  let pad = '0';\n  str = str + '';\n  return str.length >= len ? str : new Array(len - str.length + 1).join(pad) + str\n};\n\nexports.titleCase = str => {\n  if (!str) {\n    return ''\n  }\n  return str[0].toUpperCase() + str.substr(1)\n};\n\nexports.ordinal = i => {\n  let j = i % 10;\n  let k = i % 100;\n  if (j === 1 && k !== 11) {\n    return i + 'st'\n  }\n  if (j === 2 && k !== 12) {\n    return i + 'nd'\n  }\n  if (j === 3 && k !== 13) {\n    return i + 'rd'\n  }\n  return i + 'th'\n};\n\n//strip 'st' off '1st'..\nexports.toCardinal = str => {\n  str = String(str);\n  str = str.replace(/([0-9])(st|nd|rd|th)$/i, '$1');\n  return parseInt(str, 10)\n};\n\n//used mostly for cleanup of unit names, like 'months'\nexports.normalize = (str = '') => {\n  str = str.toLowerCase().trim();\n  str = str.replace(/ies$/, 'y'); //'centuries'\n  str = str.replace(/s$/, '');\n  str = str.replace(/-/g, '');\n  if (str === 'day') {\n    return 'date'\n  }\n  return str\n};\n\nexports.getEpoch = tmp => {\n  //support epoch\n  if (typeof tmp === 'number') {\n    return tmp\n  }\n  //suport date objects\n  if (exports.isDate(tmp)) {\n    return tmp.getTime()\n  }\n  if (tmp.epoch) {\n    return tmp.epoch\n  }\n  return null\n};\n\n//make sure this input is a spacetime obj\nexports.beADate = (d, s) => {\n  if (exports.isObject(d) === false) {\n    return s.clone().set(d)\n  }\n  return d\n};\n\nexports.formatTimezone = (offset, delimiter = '') => {\n  const absOffset = Math.abs(offset);\n  const sign = offset > 0 ? '+' : '-';\n  return `${sign}${exports.zeroPad(absOffset)}${delimiter}00`\n};\n});\nvar fns_1 = fns.isLeapYear;\nvar fns_2 = fns.isDate;\nvar fns_3 = fns.isArray;\nvar fns_4 = fns.isObject;\nvar fns_5 = fns.zeroPad;\nvar fns_6 = fns.titleCase;\nvar fns_7 = fns.ordinal;\nvar fns_8 = fns.toCardinal;\nvar fns_9 = fns.normalize;\nvar fns_10 = fns.getEpoch;\nvar fns_11 = fns.beADate;\nvar fns_12 = fns.formatTimezone;\n\nconst zeroPad = fns.zeroPad;\n\nconst toString = d =>\n  zeroPad(d.getMonth() + 1) + '/' + zeroPad(d.getDate()) + ':' + zeroPad(d.getHours());\n\n// a timezone will begin with a specific offset in january\n// then some will switch to something else between november-march\nconst shouldChange = (epoch, start, end, defaultOffset) => {\n  //note: this has a cray order-of-operations issue\n  //we can't get the date, without knowing the timezone, and vice-versa\n  //it's possible that we can miss a dst-change by a few hours.\n  let d = new Date(epoch);\n  //(try to mediate this a little?)\n  let bias = d.getTimezoneOffset() || 0;\n  let shift = bias + defaultOffset * 60; //in minutes\n  shift = shift * 60 * 1000; //in ms\n  d = new Date(epoch + shift);\n\n  let current = toString(d);\n  //eg. is it after ~november?\n  if (current >= start) {\n    //eg. is it before ~march~ too?\n    if (current < end) {\n      return true\n    }\n  }\n  return false\n};\nvar summerTime = shouldChange;\n\n// this method avoids having to do a full dst-calculation on every operation\n// it reproduces some things in ./index.js, but speeds up spacetime considerably\nconst quickOffset = s => {\n  let zones = s.timezones;\n  let obj = zones[s.tz];\n  if (obj === undefined) {\n    console.warn(\"Warning: couldn't find timezone \" + s.tz);\n    return 0\n  }\n  if (obj.dst === undefined) {\n    return obj.offset\n  }\n\n  //get our two possible offsets\n  let jul = obj.offset;\n  let dec = obj.offset + 1; // assume it's the same for now\n  if (obj.hem === 'n') {\n    dec = jul - 1;\n  }\n  let split = obj.dst.split('->');\n  let inSummer = summerTime(s.epoch, split[0], split[1], jul);\n  if (inSummer === true) {\n    return jul\n  }\n  return dec\n};\nvar quick = quickOffset;\n\nvar _build = {\n\t\"9|s\": \"2/dili,2/jayapura\",\n\t\"9|n\": \"2/chita,2/khandyga,2/pyongyang,2/seoul,2/tokyo,11/palau\",\n\t\"9.5|s|04/07:03->10/06:02\": \"4/adelaide,4/broken_hill,4/south,4/yancowinna\",\n\t\"9.5|s\": \"4/darwin,4/north\",\n\t\"8|s\": \"12/casey,2/kuala_lumpur,2/makassar,2/singapore,4/perth,4/west\",\n\t\"8|n|03/25:03->09/29:23\": \"2/ulan_bator\",\n\t\"8|n\": \"2/brunei,2/choibalsan,2/chongqing,2/chungking,2/harbin,2/hong_kong,2/irkutsk,2/kuching,2/macao,2/macau,2/manila,2/shanghai,2/taipei,2/ujung_pandang,2/ulaanbaatar\",\n\t\"8.75|s\": \"4/eucla\",\n\t\"7|s\": \"12/davis,2/jakarta,9/christmas\",\n\t\"7|n\": \"2/bangkok,2/barnaul,2/ho_chi_minh,2/hovd,2/krasnoyarsk,2/novokuznetsk,2/novosibirsk,2/phnom_penh,2/pontianak,2/saigon,2/tomsk,2/vientiane\",\n\t\"6|s\": \"12/vostok\",\n\t\"6|n\": \"2/almaty,2/bishkek,2/dacca,2/dhaka,2/kashgar,2/omsk,2/qyzylorda,2/thimbu,2/thimphu,2/urumqi,9/chagos\",\n\t\"6.5|n\": \"2/rangoon,9/cocos\",\n\t\"5|s\": \"12/mawson,9/kerguelen\",\n\t\"5|n\": \"2/aqtau,2/aqtobe,2/ashgabat,2/ashkhabad,2/atyrau,2/baku,2/dushanbe,2/karachi,2/oral,2/samarkand,2/tashkent,2/yekaterinburg,9/maldives\",\n\t\"5.75|n\": \"2/kathmandu,2/katmandu\",\n\t\"5.5|n\": \"2/calcutta,2/colombo,2/kolkata\",\n\t\"4|s\": \"9/reunion\",\n\t\"4|n\": \"2/dubai,2/muscat,2/tbilisi,2/yerevan,8/astrakhan,8/samara,8/saratov,8/ulyanovsk,8/volgograd,2/volgograd,9/mahe,9/mauritius\",\n\t\"4.5|n|03/22:00->09/21:24\": \"2/tehran\",\n\t\"4.5|n\": \"2/kabul\",\n\t\"3|s\": \"12/syowa,9/antananarivo\",\n\t\"3|n|03/31:03->10/27:04\": \"2/nicosia,8/athens,8/bucharest,8/helsinki,8/kiev,8/mariehamn,8/nicosia,8/riga,8/sofia,8/tallinn,8/uzhgorod,8/vilnius,8/zaporozhye\",\n\t\"3|n|03/31:02->10/27:03\": \"8/chisinau,8/tiraspol\",\n\t\"3|n|03/31:00->10/26:24\": \"2/beirut\",\n\t\"3|n|03/29:02->10/27:02\": \"2/jerusalem,2/tel_aviv\",\n\t\"3|n|03/29:00->10/26:01\": \"2/gaza,2/hebron\",\n\t\"3|n|03/29:00->10/25:01\": \"2/amman\",\n\t\"3|n|03/29:00->10/24:24\": \"2/damascus\",\n\t\"3|n\": \"0/addis_ababa,0/asmara,0/asmera,0/dar_es_salaam,0/djibouti,0/juba,0/kampala,0/mogadishu,0/nairobi,2/aden,2/baghdad,2/bahrain,2/istanbul,2/kuwait,2/qatar,2/riyadh,8/istanbul,8/kirov,8/minsk,8/moscow,8/simferopol,9/comoro,9/mayotte\",\n\t\"2|s|03/31:02->10/27:02\": \"12/troll\",\n\t\"2|s\": \"0/gaborone,0/harare,0/johannesburg,0/lubumbashi,0/lusaka,0/maputo,0/maseru,0/mbabane\",\n\t\"2|n|03/31:02->10/27:03\": \"0/ceuta,arctic/longyearbyen,3/jan_mayen,8/amsterdam,8/andorra,8/belgrade,8/berlin,8/bratislava,8/brussels,8/budapest,8/busingen,8/copenhagen,8/gibraltar,8/ljubljana,8/luxembourg,8/madrid,8/malta,8/monaco,8/oslo,8/paris,8/podgorica,8/prague,8/rome,8/san_marino,8/sarajevo,8/skopje,8/stockholm,8/tirane,8/vaduz,8/vatican,8/vienna,8/warsaw,8/zagreb,8/zurich\",\n\t\"2|n\": \"0/blantyre,0/bujumbura,0/cairo,0/khartoum,0/kigali,0/tripoli,8/kaliningrad\",\n\t\"1|s|04/02:01->09/03:03\": \"0/windhoek\",\n\t\"1|s\": \"0/kinshasa,0/luanda\",\n\t\"1|n|05/05:03->06/09:02\": \"0/casablanca,0/el_aaiun\",\n\t\"1|n|03/31:01->10/27:02\": \"3/canary,3/faeroe,3/faroe,3/madeira,8/belfast,8/dublin,8/guernsey,8/isle_of_man,8/jersey,8/lisbon,8/london\",\n\t\"1|n\": \"0/algiers,0/bangui,0/brazzaville,0/douala,0/lagos,0/libreville,0/malabo,0/ndjamena,0/niamey,0/porto-novo,0/tunis\",\n\t\"14|n\": \"11/kiritimati\",\n\t\"13|s|04/07:04->09/29:03\": \"11/apia\",\n\t\"13|s|01/15:02->11/05:03\": \"11/tongatapu\",\n\t\"13|n\": \"11/enderbury,11/fakaofo\",\n\t\"12|s|04/07:03->09/29:02\": \"12/mcmurdo,12/south_pole,11/auckland\",\n\t\"12|s|01/13:03->11/10:02\": \"11/fiji\",\n\t\"12|n\": \"2/anadyr,2/kamchatka,2/srednekolymsk,11/funafuti,11/kwajalein,11/majuro,11/nauru,11/tarawa,11/wake,11/wallis\",\n\t\"12.75|s|04/07:03->09/29:02\": \"11/chatham\",\n\t\"11|s\": \"12/macquarie,11/bougainville\",\n\t\"11|n\": \"2/magadan,2/sakhalin,11/efate,11/guadalcanal,11/kosrae,11/noumea,11/pohnpei,11/ponape\",\n\t\"11.5|n\": \"11/norfolk\",\n\t\"10|s|04/07:03->10/06:02\": \"4/act,4/canberra,4/currie,4/hobart,4/melbourne,4/nsw,4/sydney,4/tasmania,4/victoria\",\n\t\"10|s\": \"12/dumontdurville,4/brisbane,4/lindeman,4/queensland\",\n\t\"10|n\": \"2/ust-nera,2/vladivostok,2/yakutsk,11/chuuk,11/guam,11/port_moresby,11/saipan,11/truk,11/yap\",\n\t\"10.5|s|04/07:01->10/06:02\": \"4/lhi,4/lord_howe\",\n\t\"0|n|03/31:00->10/27:01\": \"1/scoresbysund,3/azores\",\n\t\"0|n\": \"0/abidjan,0/accra,0/bamako,0/banjul,0/bissau,0/conakry,0/dakar,0/freetown,0/lome,0/monrovia,0/nouakchott,0/ouagadougou,0/sao_tome,0/timbuktu,1/danmarkshavn,3/reykjavik,3/st_helena,13/gmt,13/gmt+0,13/gmt-0,13/gmt0,13/greenwich,13/utc,13/universal,13/zulu\",\n\t\"-9|n|03/10:02->11/03:02\": \"1/adak,1/atka\",\n\t\"-9|n\": \"11/gambier\",\n\t\"-9.5|n\": \"11/marquesas\",\n\t\"-8|n|03/10:02->11/03:02\": \"1/anchorage,1/juneau,1/metlakatla,1/nome,1/sitka,1/yakutat\",\n\t\"-8|n\": \"11/pitcairn\",\n\t\"-7|n|03/10:02->11/03:02\": \"1/dawson,1/ensenada,1/los_angeles,1/santa_isabel,1/tijuana,1/vancouver,1/whitehorse,6/pacific,6/yukon,10/bajanorte\",\n\t\"-7|n\": \"1/creston,1/dawson_creek,1/hermosillo,1/phoenix\",\n\t\"-6|s|04/06:22->09/07:22\": \"7/easterisland,11/easter\",\n\t\"-6|n|04/07:02->10/27:02\": \"1/chihuahua,1/mazatlan,10/bajasur\",\n\t\"-6|n|03/10:02->11/03:02\": \"1/boise,1/cambridge_bay,1/denver,1/edmonton,1/inuvik,1/ojinaga,1/shiprock,1/yellowknife,6/mountain\",\n\t\"-6|n\": \"1/belize,1/costa_rica,1/el_salvador,1/guatemala,1/managua,1/regina,1/swift_current,1/tegucigalpa,6/east-saskatchewan,6/saskatchewan,11/galapagos\",\n\t\"-5|s\": \"1/lima,1/rio_branco,5/acre\",\n\t\"-5|n|04/07:02->10/27:02\": \"1/bahia_banderas,1/merida,1/mexico_city,1/monterrey,10/general\",\n\t\"-5|n|03/12:03->11/05:01\": \"1/north_dakota\",\n\t\"-5|n|03/10:02->11/03:02\": \"1/chicago,1/knox_in,1/matamoros,1/menominee,1/rainy_river,1/rankin_inlet,1/resolute,1/winnipeg,6/central\",\n\t\"-5|n\": \"1/atikokan,1/bogota,1/cancun,1/cayman,1/coral_harbour,1/eirunepe,1/guayaquil,1/jamaica,1/panama,1/porto_acre\",\n\t\"-4|s|05/13:23->08/13:01\": \"12/palmer\",\n\t\"-4|s|04/06:24->09/08:00\": \"1/santiago,7/continental\",\n\t\"-4|s|03/23:24->10/06:00\": \"1/asuncion\",\n\t\"-4|s|02/16:24->11/03:00\": \"1/campo_grande,1/cuiaba\",\n\t\"-4|s\": \"1/la_paz,1/manaus,5/west\",\n\t\"-4|n|03/12:03->11/05:01\": \"1/indiana,1/kentucky\",\n\t\"-4|n|03/10:02->11/03:02\": \"1/detroit,1/fort_wayne,1/grand_turk,1/indianapolis,1/iqaluit,1/louisville,1/montreal,1/nassau,1/new_york,1/nipigon,1/pangnirtung,1/port-au-prince,1/thunder_bay,1/toronto,6/eastern\",\n\t\"-4|n|03/10:00->11/03:01\": \"1/havana\",\n\t\"-4|n\": \"1/anguilla,1/antigua,1/aruba,1/barbados,1/blanc-sablon,1/boa_vista,1/caracas,1/curacao,1/dominica,1/grenada,1/guadeloupe,1/guyana,1/kralendijk,1/lower_princes,1/marigot,1/martinique,1/montserrat,1/port_of_spain,1/porto_velho,1/puerto_rico,1/santo_domingo,1/st_barthelemy,1/st_kitts,1/st_lucia,1/st_thomas,1/st_vincent,1/tortola,1/virgin\",\n\t\"-3|s\": \"1/argentina,1/buenos_aires,1/cordoba,1/fortaleza,1/montevideo,1/punta_arenas,1/sao_paulo,12/rothera,3/stanley,5/east\",\n\t\"-3|n|03/10:02->11/03:02\": \"1/glace_bay,1/goose_bay,1/halifax,1/moncton,1/thule,3/bermuda,6/atlantic\",\n\t\"-3|n\": \"1/araguaina,1/bahia,1/belem,1/catamarca,1/cayenne,1/jujuy,1/maceio,1/mendoza,1/paramaribo,1/recife,1/rosario,1/santarem\",\n\t\"-2|s\": \"5/denoronha\",\n\t\"-2|n|03/30:22->10/26:23\": \"1/godthab\",\n\t\"-2|n|03/10:02->11/03:02\": \"1/miquelon\",\n\t\"-2|n\": \"1/noronha,3/south_georgia\",\n\t\"-2.5|n|03/10:02->11/03:02\": \"1/st_johns,6/newfoundland\",\n\t\"-1|n\": \"3/cape_verde\",\n\t\"-11|n\": \"11/midway,11/niue,11/pago_pago,11/samoa\",\n\t\"-10|n\": \"11/honolulu,11/johnston,11/rarotonga,11/tahiti\"\n};\n\nvar _build$1 = /*#__PURE__*/Object.freeze({\n\t'default': _build\n});\n\n//prefixes for iana names..\nvar _prefixes = [\n  'africa',\n  'america',\n  'asia',\n  'atlantic',\n  'australia',\n  'brazil',\n  'canada',\n  'chile',\n  'europe',\n  'indian',\n  'mexico',\n  'pacific',\n  'antarctica',\n  'etc'\n];\n\nvar data = getCjsExportFromNamespace(_build$1);\n\nlet all = {};\nObject.keys(data).forEach(k => {\n  let split = k.split('|');\n  let obj = {\n    offset: Number(split[0]),\n    hem: split[1]\n  };\n  if (split[2]) {\n    obj.dst = split[2];\n  }\n  let names = data[k].split(',');\n  names.forEach(str => {\n    str = str.replace(/(^[0-9]+)\\//, (before, num) => {\n      num = Number(num);\n      return _prefixes[num] + '/'\n    });\n    all[str] = obj;\n  });\n});\n\nall['utc'] = {\n  offset: 0,\n  hem: 'n' //(sorry)\n};\n\n//add etc/gmt+n\nfor (let i = -14; i <= 14; i += 0.5) {\n  let num = i;\n  if (num > 0) {\n    num = '+' + num;\n  }\n  let name = 'etc/gmt' + num;\n  all[name] = {\n    offset: i * -1, //they're negative!\n    hem: 'n' //(sorry)\n  };\n  name = 'utc/gmt' + num; //this one too, why not.\n  all[name] = {\n    offset: i * -1,\n    hem: 'n'\n  };\n}\n// console.log(all)\n\n// console.log(Object.keys(all).length)\nvar unpack = all;\n\n//find the implicit iana code for this machine.\n//safely query the Intl object\n//based on - https://bitbucket.org/pellepim/jstimezonedetect/src\nconst fallbackTZ = 'utc'; //\n\n//this Intl object is not supported often, yet\nconst safeIntl = () => {\n  if (typeof Intl === 'undefined' || typeof Intl.DateTimeFormat === 'undefined') {\n    return null\n  }\n  let format = Intl.DateTimeFormat();\n  if (typeof format === 'undefined' || typeof format.resolvedOptions === 'undefined') {\n    return null\n  }\n  let timezone = format.resolvedOptions().timeZone;\n  if (!timezone) {\n    return null\n  }\n  return timezone.toLowerCase()\n};\n\nconst guessTz = () => {\n  let timezone = safeIntl();\n  if (timezone === null) {\n    return fallbackTZ\n  }\n  return timezone\n};\n//do it once per computer\nvar guessTz_1 = guessTz;\n\nconst isOffset = /(\\-?[0-9]+)h(rs)?/i;\nconst isNumber = /(\\-?[0-9]+)/;\nconst utcOffset = /utc([\\-+]?[0-9]+)/i;\nconst gmtOffset = /gmt([\\-+]?[0-9]+)/i;\n\nconst toIana = function(num) {\n  num = Number(num);\n  if (num > -13 && num < 13) {\n    num = num * -1; //it's opposite!\n    num = (num > 0 ? '+' : '') + num; //add plus sign\n    return 'etc/gmt' + num\n  }\n  return null\n};\n\nconst parseOffset = function(tz) {\n  // '+5hrs'\n  let m = tz.match(isOffset);\n  if (m !== null) {\n    return toIana(m[1])\n  }\n  // 'utc+5'\n  m = tz.match(utcOffset);\n  if (m !== null) {\n    return toIana(m[1])\n  }\n  // 'GMT-5' (not opposite)\n  m = tz.match(gmtOffset);\n  if (m !== null) {\n    let num = Number(m[1]) * -1;\n    return toIana(num)\n  }\n  // '+5'\n  m = tz.match(isNumber);\n  if (m !== null) {\n    return toIana(m[1])\n  }\n  return null\n};\nvar parseOffset_1 = parseOffset;\n\nconst local = guessTz_1();\n\n//add all the city names by themselves\nconst cities = Object.keys(unpack).reduce((h, k) => {\n  let city = k.split('/')[1] || '';\n  city = city.replace(/_/g, ' ');\n  h[city] = k;\n  return h\n}, {});\n\n//try to match these against iana form\nconst normalize = tz => {\n  tz = tz.replace(/ time/g, '');\n  tz = tz.replace(/ (standard|daylight|summer)/g, '');\n  tz = tz.replace(/\\b(east|west|north|south)ern/g, '$1');\n  tz = tz.replace(/\\b(africa|america|australia)n/g, '$1');\n  tz = tz.replace(/\\beuropean/g, 'europe');\n  tz = tz.replace(/\\islands/g, 'island');\n  return tz\n};\n\n// try our best to reconcile the timzone to this given string\nconst lookupTz = (str, zones) => {\n  if (!str) {\n    return local\n  }\n  let tz = str.trim();\n  let split = str.split('/');\n  //support long timezones like 'America/Argentina/Rio_Gallegos'\n  if (split.length > 2 && zones.hasOwnProperty(tz) === false) {\n    tz = split[0] + '/' + split[1];\n  }\n  tz = tz.toLowerCase();\n  if (zones.hasOwnProperty(tz) === true) {\n    return tz\n  }\n  //lookup more loosely..\n  tz = normalize(tz);\n  if (zones.hasOwnProperty(tz) === true) {\n    return tz\n  }\n  //try city-names\n  if (cities.hasOwnProperty(tz) === true) {\n    return cities[tz]\n  }\n  // //try to parse '-5h'\n  if (/[0-9]/.test(tz) === true) {\n    let id = parseOffset_1(tz);\n    if (id) {\n      return id\n    }\n  }\n\n  throw new Error(\n    \"Spacetime: Cannot find timezone named: '\" + str + \"'. Please enter an IANA timezone id.\"\n  )\n};\nvar find = lookupTz;\n\nlet o = {\n  millisecond: 1\n};\no.second = 1000;\no.minute = 60000;\no.hour = 3.6e6; // dst is supported post-hoc\no.day = 8.64e7; //\no.date = o.day;\no.month = 8.64e7 * 29.5; //(average)\no.week = 6.048e8;\no.year = 3.154e10; // leap-years are supported post-hoc\n//add plurals\nObject.keys(o).forEach(k => {\n  o[k + 's'] = o[k];\n});\nvar milliseconds = o;\n\n//basically, step-forward/backward until js Date object says we're there.\nconst walk = (s, n, fn, unit, previous) => {\n  let current = s.d[fn]();\n  if (current === n) {\n    return //already there\n  }\n  let startUnit = previous === null ? null : s.d[previous]();\n  let original = s.epoch;\n  //try to get it as close as we can\n  let diff = n - current;\n  s.epoch += milliseconds[unit] * diff;\n\n  //DST edge-case: if we are going many days, be a little conservative\n  if (unit === 'day' && Math.abs(diff) > 28) {\n    //but don't push it over a month\n    if (n < 28) {\n      s.epoch += milliseconds.hour;\n    }\n  }\n  //repair it if we've gone too far or something\n  //(go by half-steps, just in case)\n  const halfStep = milliseconds[unit] / 2;\n  while (s.d[fn]() < n) {\n    s.epoch += halfStep;\n  }\n  while (s.d[fn]() > n) {\n    s.epoch -= halfStep;\n  }\n  //oops, did we change previous unit? revert it.\n  if (previous !== null && startUnit !== s.d[previous]()) {\n    // console.warn('spacetime warning: missed setting ' + unit)\n    s.epoch = original;\n    // i mean, but make it close...\n    s.epoch += milliseconds[unit] * diff * 0.89; // i guess?\n  }\n};\n//find the desired date by a increment/check while loop\nconst units = {\n  year: {\n    valid: n => n > -4000 && n < 4000,\n    walkTo: (s, n) => walk(s, n, 'getFullYear', 'year', null)\n  },\n  month: {\n    valid: n => n >= 0 && n <= 11,\n    walkTo: (s, n) => {\n      let d = s.d;\n      let current = d.getMonth();\n      let original = s.epoch;\n      let startUnit = d.getFullYear();\n      if (current === n) {\n        return\n      }\n      //try to get it as close as we can..\n      let diff = n - current;\n      s.epoch += milliseconds.day * (diff * 28); //special case\n      //oops, did we change the year? revert it.\n      if (startUnit !== s.d.getFullYear()) {\n        s.epoch = original;\n      }\n      //incriment by day\n      while (s.d.getMonth() < n) {\n        s.epoch += milliseconds.day;\n      }\n      while (s.d.getMonth() > n) {\n        s.epoch -= milliseconds.day;\n      }\n    }\n  },\n  date: {\n    valid: n => n > 0 && n <= 31,\n    walkTo: (s, n) => walk(s, n, 'getDate', 'day', 'getMonth')\n  },\n  hour: {\n    valid: n => n >= 0 && n < 24,\n    walkTo: (s, n) => walk(s, n, 'getHours', 'hour', 'getDate')\n  },\n  minute: {\n    valid: n => n >= 0 && n < 60,\n    walkTo: (s, n) => walk(s, n, 'getMinutes', 'minute', 'getHours')\n  },\n  second: {\n    valid: n => n >= 0 && n < 60,\n    walkTo: (s, n) => {\n      //do this one directly\n      s.epoch = s.seconds(n).epoch;\n    }\n  },\n  millisecond: {\n    valid: n => n >= 0 && n < 1000,\n    walkTo: (s, n) => {\n      //do this one directly\n      s.epoch = s.milliseconds(n).epoch;\n    }\n  }\n};\n\nconst walkTo = (s, wants) => {\n  let keys = Object.keys(units);\n  let old = s.clone();\n  for (let i = 0; i < keys.length; i++) {\n    let k = keys[i];\n    let n = wants[k];\n    if (n === undefined) {\n      n = old[k]();\n    }\n    if (typeof n === 'string') {\n      n = parseInt(n, 10);\n    }\n    //make-sure it's valid\n    if (!units[k].valid(n)) {\n      s.epoch = null;\n      if (s.silent === false) {\n        console.warn('invalid ' + k + ': ' + n);\n      }\n      return\n    }\n    // console.log(k, n)\n    units[k].walkTo(s, n);\n  }\n  return\n};\n\nvar walk_1 = walkTo;\n\nlet shortMonths = [\n  'jan',\n  'feb',\n  'mar',\n  'apr',\n  'may',\n  'jun',\n  'jul',\n  'aug',\n  'sept',\n  'oct',\n  'nov',\n  'dec'\n];\nlet longMonths = [\n  'january',\n  'february',\n  'march',\n  'april',\n  'may',\n  'june',\n  'july',\n  'august',\n  'september',\n  'october',\n  'november',\n  'december'\n];\n\nfunction buildMapping() {\n  const obj = {\n    sep: 8 //support this format\n  };\n  for (let i = 0; i < shortMonths.length; i++) {\n    obj[shortMonths[i]] = i;\n  }\n  for (let i = 0; i < longMonths.length; i++) {\n    obj[longMonths[i]] = i;\n  }\n  return obj\n}\n\nvar months = {\n  short: () => shortMonths,\n  long: () => longMonths,\n  mapping: () => buildMapping(),\n  set: i18n => {\n    shortMonths = i18n.short || shortMonths;\n    longMonths = i18n.long || longMonths;\n  }\n};\n\n//pull-apart ISO offsets, like \"+0100\"\nconst parseOffset$1 = (s, offset) => {\n  if (!offset) {\n    return s\n  }\n  //this is a fancy-move\n  if (offset === 'Z') {\n    offset = '+0000';\n  }\n\n  // according to ISO8601, tz could be hh:mm, hhmm or hh\n  // so need few more steps before the calculation.\n  let num = 0;\n\n  // for (+-)hh:mm\n  if (/^[\\+-]?[0-9]{2}:[0-9]{2}$/.test(offset)) {\n    //support \"+01:00\"\n    if (/:00/.test(offset) === true) {\n      offset = offset.replace(/:00/, '');\n    }\n    //support \"+01:30\"\n    if (/:30/.test(offset) === true) {\n      offset = offset.replace(/:30/, '.5');\n    }\n  }\n\n  // for (+-)hhmm\n  if (/^[\\+-]?[0-9]{4}$/.test(offset)) {\n    offset = offset.replace(/30$/, '.5');\n  }\n\n  num = parseFloat(offset);\n\n  //divide by 100 or 10 - , \"+0100\", \"+01\"\n  if (Math.abs(num) > 100) {\n    num = num / 100;\n  }\n  //okay, try to match it to a utc timezone\n  //remember - this is opposite! a -5 offset maps to Etc/GMT+5  ¯\\_(:/)_/¯\n  //https://askubuntu.com/questions/519550/why-is-the-8-timezone-called-gmt-8-in-the-filesystem\n  num *= -1;\n\n  if (num >= 0) {\n    num = '+' + num;\n  }\n  let tz = 'etc/gmt' + num;\n  let zones = s.timezones;\n\n  if (zones[tz]) {\n    // log a warning if we're over-writing a given timezone?\n    // console.log('changing timezone to: ' + tz)\n    s.tz = tz;\n  }\n  return s\n};\nvar parseOffset_1$1 = parseOffset$1;\n\nconst parseTime = (s, str = '') => {\n  str = str.replace(/^\\s+/, '').toLowerCase(); //trim\n  //formal time formats - 04:30.23\n  let arr = str.match(/([0-9]{1,2}):([0-9]{1,2}):?([0-9]{1,2})?[:\\.]?([0-9]{1,4})?/);\n  if (arr !== null) {\n    //validate it a little\n    let h = Number(arr[1]);\n    if (h < 0 || h > 24) {\n      return s.startOf('day')\n    }\n    let m = Number(arr[2]); //don't accept '5:3pm'\n    if (arr[2].length < 2 || m < 0 || m > 59) {\n      return s.startOf('day')\n    }\n    s = s.hour(h);\n    s = s.minute(m);\n    s = s.seconds(arr[3] || 0);\n    s = s.millisecond(arr[4] || 0);\n    //parse-out am/pm\n    let ampm = str.match(/[\\b0-9](am|pm)\\b/);\n    if (ampm !== null && ampm[1]) {\n      s = s.ampm(ampm[1]);\n    }\n    return s\n  }\n  //try an informal form - 5pm (no minutes)\n  arr = str.match(/([0-9]+) ?(am|pm)/);\n  if (arr !== null && arr[1]) {\n    let h = Number(arr[1]);\n    //validate it a little..\n    if (h > 12 || h < 1) {\n      return s.startOf('day')\n    }\n    s = s.hour(arr[1] || 0);\n    s = s.ampm(arr[2]);\n    s = s.startOf('hour');\n    return s\n  }\n  //no time info found, use start-of-day\n  s = s.startOf('day');\n  return s\n};\nvar parseTime_1 = parseTime;\n\nconst monthLengths = [\n  31, // January - 31 days\n  28, // February - 28 days in a common year and 29 days in leap years\n  31, // March - 31 days\n  30, // April - 30 days\n  31, // May - 31 days\n  30, // June - 30 days\n  31, // July - 31 days\n  31, // August - 31 days\n  30, // September - 30 days\n  31, // October - 31 days\n  30, // November - 30 days\n  31 // December - 31 days\n];\nvar monthLengths_1 = monthLengths;\n\nconst isLeapYear = fns.isLeapYear;\n\n//given a month, return whether day number exists in it\nconst hasDate = obj => {\n  //invalid values\n  if (monthLengths_1.hasOwnProperty(obj.month) !== true) {\n    return false\n  }\n  //support leap-year in february\n  if (obj.month === 1) {\n    if (isLeapYear(obj.year) && obj.date <= 29) {\n      return true\n    } else {\n      return obj.date <= 28\n    }\n  }\n  //is this date too-big for this month?\n  let max = monthLengths_1[obj.month] || 0;\n  if (obj.date <= max) {\n    return true\n  }\n  return false\n};\nvar hasDate_1 = hasDate;\n\nconst months$1 = months.mapping();\n\n\n\n\n\nconst parseYear = (str = '') => {\n  //support '18 -> 2018\n  // str = str.replace(/^'([0-9]{2})/, '20$1')\n  // str = str.replace('([0-9]+) ?b\\.?c\\.?$', '-$1')\n  let year = parseInt(str.trim(), 10);\n  year = year || new Date().getFullYear();\n  return year\n};\n\nconst strFmt = [\n  //iso-this 1998-05-30T22:00:00:000Z, iso-that 2017-04-03T08:00:00-0700\n  {\n    reg: /^(\\-?0?0?[0-9]{3,4})-([0-9]{1,2})-([0-9]{1,2})[T| ]([0-9.:]+)(Z|[0-9\\-\\+:]+)?$/,\n    parse: (s, arr, givenTz, options) => {\n      let month = parseInt(arr[2], 10) - 1;\n      let obj = {\n        year: arr[1],\n        month,\n        date: arr[3]\n      };\n      if (hasDate_1(obj) === false) {\n        s.epoch = null;\n        return s\n      }\n      parseOffset_1$1(s, arr[5]);\n      walk_1(s, obj);\n      s = parseTime_1(s, arr[4]);\n      return s\n    }\n  },\n  //iso \"2015-03-25\" or \"2015/03/25\" or \"2015/03/25 12:26:14 PM\"\n  {\n    reg: /^([0-9]{4})[\\-\\/]([0-9]{1,2})[\\-\\/]([0-9]{1,2}),?( [0-9]{1,2}:[0-9]{2}:?[0-9]{0,2}? ?(am|pm|gmt))?$/i,\n    parse: (s, arr) => {\n      let obj = {\n        year: arr[1],\n        month: parseInt(arr[2], 10) - 1,\n        date: parseInt(arr[3], 10)\n      };\n      if (obj.month >= 12) {\n        //support yyyy/dd/mm (weird, but ok)\n        obj.date = parseInt(arr[2], 10);\n        obj.month = parseInt(arr[3], 10) - 1;\n      }\n      if (hasDate_1(obj) === false) {\n        s.epoch = null;\n        return s\n      }\n      walk_1(s, obj);\n      s = parseTime_1(s, arr[4]);\n      return s\n    }\n  },\n  //mm/dd/yyyy - uk/canada \"6/28/2019, 12:26:14 PM\"\n  {\n    reg: /^([0-9]{1,2})[\\-\\/]([0-9]{1,2})[\\-\\/]?([0-9]{4})?,?( [0-9]{1,2}:[0-9]{2}:?[0-9]{0,2}? ?(am|pm|gmt))?$/i,\n    parse: (s, arr) => {\n      let month = parseInt(arr[1], 10) - 1;\n      let date = parseInt(arr[2], 10);\n      //support dd/mm/yyy\n      if (s.british || month >= 12) {\n        date = parseInt(arr[1], 10);\n        month = parseInt(arr[2], 10) - 1;\n      }\n      let year = arr[3] || new Date().getFullYear();\n      let obj = {\n        year,\n        month,\n        date\n      };\n      if (hasDate_1(obj) === false) {\n        s.epoch = null;\n        return s\n      }\n      walk_1(s, obj);\n      s = parseTime_1(s, arr[4]);\n      return s\n    }\n  },\n  //common british format - \"25-feb-2015\"\n  {\n    reg: /^([0-9]{1,2})[\\-\\/]([a-z]+)[\\-\\/]?([0-9]{4})?$/i,\n    parse: (s, arr) => {\n      let month = months$1[arr[2].toLowerCase()];\n      let year = parseYear(arr[3]);\n      let obj = {\n        year,\n        month,\n        date: fns.toCardinal(arr[1] || '')\n      };\n      if (hasDate_1(obj) === false) {\n        s.epoch = null;\n        return s\n      }\n      walk_1(s, obj);\n      s = parseTime_1(s, arr[4]);\n      return s\n    }\n  },\n\n  //Long \"Mar 25 2015\"\n  //February 22, 2017 15:30:00\n  {\n    reg: /^([a-z]+) ([0-9]{1,2}(?:st|nd|rd|th)?),?( [0-9]{4})?( ([0-9:]+( ?am| ?pm| ?gmt)?))?$/i,\n    parse: (s, arr) => {\n      let month = months$1[arr[1].toLowerCase()];\n      let year = parseYear(arr[3]);\n      let obj = {\n        year,\n        month,\n        date: fns.toCardinal(arr[2] || '')\n      };\n      if (hasDate_1(obj) === false) {\n        s.epoch = null;\n        return s\n      }\n      walk_1(s, obj);\n      s = parseTime_1(s, arr[4]);\n      return s\n    }\n  },\n  //February 2017 (implied date)\n  {\n    reg: /^([a-z]+) ([0-9]{4})$/i,\n    parse: (s, arr) => {\n      let month = months$1[arr[1].toLowerCase()];\n      let year = parseYear(arr[2]);\n      let obj = {\n        year,\n        month,\n        date: 1\n      };\n      if (hasDate_1(obj) === false) {\n        s.epoch = null;\n        return s\n      }\n      walk_1(s, obj);\n      s = parseTime_1(s, arr[4]);\n      return s\n    }\n  },\n  //Long \"25 Mar 2015\"\n  {\n    reg: /^([0-9]{1,2}(?:st|nd|rd|th)?) ([a-z]+),?( [0-9]{4})?,? ?([0-9]{1,2}:[0-9]{2}:?[0-9]{0,2}? ?(am|pm|gmt))?$/i,\n    parse: (s, arr) => {\n      let month = months$1[arr[2].toLowerCase()];\n      if (!month) {\n        return null\n      }\n      let year = parseYear(arr[3]);\n      let obj = {\n        year,\n        month,\n        date: fns.toCardinal(arr[1])\n      };\n      if (hasDate_1(obj) === false) {\n        s.epoch = null;\n        return s\n      }\n      walk_1(s, obj);\n      s = parseTime_1(s, arr[4]);\n      return s\n    }\n  },\n  {\n    // '200bc'\n    reg: /^[0-9,]+ ?b\\.?c\\.?$/i,\n    parse: (s, arr) => {\n      let str = arr[0] || '';\n      //make negative-year\n      str = str.replace(/^([0-9,]+) ?b\\.?c\\.?$/i, '-$1');\n      //remove commas\n      str = str.replace(/,/g, '');\n      let year = parseInt(str.trim(), 10);\n      let d = new Date();\n      let obj = {\n        year,\n        month: d.getMonth(),\n        date: d.getDate()\n      };\n      if (hasDate_1(obj) === false) {\n        s.epoch = null;\n        return s\n      }\n      walk_1(s, obj);\n      s = parseTime_1(s);\n      return s\n    }\n  },\n  {\n    // '200ad'\n    reg: /^[0-9,]+ ?(a\\.?d\\.?|c\\.?e\\.?)$/i,\n    parse: (s, arr) => {\n      let str = arr[0] || '';\n      //remove commas\n      str = str.replace(/,/g, '');\n      let year = parseInt(str.trim(), 10);\n      let d = new Date();\n      let obj = {\n        year,\n        month: d.getMonth(),\n        date: d.getDate()\n      };\n      if (hasDate_1(obj) === false) {\n        s.epoch = null;\n        return s\n      }\n      walk_1(s, obj);\n      s = parseTime_1(s);\n      return s\n    }\n  },\n  {\n    // '1992'\n    reg: /^[0-9]{4}( ?a\\.?d\\.?)?$/i,\n    parse: (s, arr) => {\n      let year = parseYear(arr[0]);\n      let d = new Date();\n      let obj = {\n        year,\n        month: d.getMonth(),\n        date: d.getDate()\n      };\n      if (hasDate_1(obj) === false) {\n        s.epoch = null;\n        return s\n      }\n      walk_1(s, obj);\n      s = parseTime_1(s);\n      return s\n    }\n  }\n];\n\nvar strParse = strFmt;\n\nconst dates = {\n  now: s => {\n    s.epoch = Date.now();\n    return s\n  },\n  tonight: s => {\n    s.epoch = Date.now();\n    s = s.hour(18);\n    return s\n  },\n  today: s => {\n    s.epoch = Date.now();\n    return s\n  },\n  tomorrow: s => {\n    s.epoch = Date.now();\n    s = s.add(1, 'day');\n    s = s.startOf('day');\n    return s\n  },\n  yesterday: s => {\n    s.epoch = Date.now();\n    s = s.subtract(1, 'day');\n    s = s.startOf('day');\n    return s\n  },\n  christmas: s => {\n    let year = new Date().getFullYear();\n    s = s.set([year, 11, 25, 18, 0, 0]); // Dec 25\n    return s\n  },\n  'new years': s => {\n    let year = new Date().getFullYear();\n    s = s.set([year, 11, 31, 18, 0, 0]); // Dec 31\n    return s\n  }\n};\ndates['new years eve'] = dates['new years'];\nvar namedDates = dates;\n\n//we have to actually parse these inputs ourselves\n//  -  can't use built-in js parser ;(\n//=========================================\n// ISO Date\t  \"2015-03-25\"\n// Short Date\t\"03/25/2015\" or \"2015/03/25\"\n// Long Date\t\"Mar 25 2015\" or \"25 Mar 2015\"\n// Full Date\t\"Wednesday March 25 2015\"\n//=========================================\n\n//-- also -\n// if the given epoch is really small, they've probably given seconds and not milliseconds\n// anything below this number is likely (but not necessarily) a mistaken input.\n// this may seem like an arbitrary number, but it's 'within jan 1970'\n// this is only really ambiguous until 2054 or so\nconst minimumEpoch = 2500000000;\n\nconst defaults = {\n  year: new Date().getFullYear(),\n  month: 0,\n  date: 1\n};\n\n//support [2016, 03, 01] format\nconst handleArray = (s, arr) => {\n  let order = ['year', 'month', 'date', 'hour', 'minute', 'second', 'millisecond'];\n  for (let i = 0; i < order.length; i++) {\n    let num = arr[i] || defaults[order[i]] || 0;\n    s = s[order[i]](num);\n  }\n  return s\n};\n//support {year:2016, month:3} format\nconst handleObject = (s, obj) => {\n  obj = Object.assign({}, defaults, obj);\n  let keys = Object.keys(obj);\n  for (let i = 0; i < keys.length; i++) {\n    let unit = keys[i];\n    //make sure we have this method\n    if (s[unit] === undefined || typeof s[unit] !== 'function') {\n      continue\n    }\n    //make sure the value is a number\n    if (obj[unit] === null || obj[unit] === undefined || obj[unit] === '') {\n      continue\n    }\n    let num = obj[unit] || defaults[unit] || 0;\n    s = s[unit](num);\n  }\n  return s\n};\n\n//find the epoch from different input styles\nconst parseInput = (s, input, givenTz) => {\n  //if we've been given a epoch number, it's easy\n  if (typeof input === 'number') {\n    if (input > 0 && input < minimumEpoch && s.silent === false) {\n      console.warn('  - Warning: You are setting the date to January 1970.');\n      console.warn('       -   did input seconds instead of milliseconds?');\n    }\n    s.epoch = input;\n    return s\n  }\n  //set tmp time\n  s.epoch = Date.now();\n  if (input === null || input === undefined) {\n    return s //k, we're good.\n  }\n  //support input of Date() object\n  if (fns.isDate(input) === true) {\n    s.epoch = input.getTime();\n    return s\n  }\n  //support [2016, 03, 01] format\n  if (fns.isArray(input) === true) {\n    s = handleArray(s, input);\n    return s\n  }\n  //support {year:2016, month:3} format\n  if (fns.isObject(input) === true) {\n    //support spacetime object as input\n    if (input.epoch) {\n      s.epoch = input.epoch;\n      s.tz = input.tz;\n      return s\n    }\n    s = handleObject(s, input);\n    return s\n  }\n  //input as a string..\n  if (typeof input !== 'string') {\n    return s\n  }\n  //little cleanup..\n  input = input.replace(/\\b(mon|tues|wed|wednes|thu|thurs|fri|sat|satur|sun)(day)?\\b/i, '');\n  input = input.replace(/,/g, '');\n  input = input.replace(/ +/g, ' ').trim();\n  //try some known-words, like 'now'\n  if (namedDates.hasOwnProperty(input) === true) {\n    s = namedDates[input](s);\n    return s\n  }\n  //try each text-parse template, use the first good result\n  for (let i = 0; i < strParse.length; i++) {\n    let m = input.match(strParse[i].reg);\n    if (m) {\n      let res = strParse[i].parse(s, m, givenTz);\n      if (res !== null) {\n        return res\n      }\n    }\n  }\n  if (s.silent === false) {\n    console.warn(\"Warning: couldn't parse date-string: '\" + input + \"'\");\n  }\n  s.epoch = null;\n  return s\n};\nvar input = parseInput;\n\nlet shortDays = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'];\nlet longDays = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'];\n\nvar days = {\n  short: () => shortDays,\n  long: () => longDays,\n  set: i18n => {\n    shortDays = i18n.short || shortDays;\n    longDays = i18n.long || longDays;\n  }\n};\n\n// create the timezone offset part of an iso timestamp\n// it's kind of nuts how involved this is\n// \"+01:00\", \"+0100\", or simply \"+01\"\nconst isoOffset = s => {\n  let offset = s.timezone().current.offset;\n  const isNegative = offset < 0;\n  let minute = '00';\n  //handle 5.5 → '5:30'\n  if (Math.abs(offset % 1) === 0.5) {\n    minute = '30';\n    if (offset >= 0) {\n      offset = Math.floor(offset);\n    } else {\n      offset = Math.ceil(offset);\n    }\n  }\n  if (isNegative) {\n    //handle negative sign\n    offset *= -1;\n    offset = fns.zeroPad(offset, 2);\n    offset = '-' + offset;\n  } else {\n    offset = fns.zeroPad(offset, 2);\n    offset = '+' + offset;\n  }\n  offset = offset + ':' + minute;\n  //'Z' means 00\n  if (offset === '+00:00') {\n    offset = 'Z';\n  }\n  return offset\n};\n\nvar _offset = isoOffset;\n\nconst format = {\n  day: s => fns.titleCase(s.dayName()),\n  'day-short': s => fns.titleCase(days.short()[s.day()]),\n  'day-number': s => s.day(),\n  'day-ordinal': s => fns.ordinal(s.day()),\n  'day-pad': s => fns.zeroPad(s.day()),\n\n  date: s => s.date(),\n  'date-ordinal': s => fns.ordinal(s.date()),\n  'date-pad': s => fns.zeroPad(s.date()),\n\n  month: s => fns.titleCase(s.monthName()),\n  'month-short': s => fns.titleCase(months.short()[s.month()]),\n  'month-number': s => s.month(),\n  'month-ordinal': s => fns.ordinal(s.month()),\n  'month-pad': s => fns.zeroPad(s.month()),\n  'iso-month': s => fns.zeroPad(s.month() + 1), //1-based months\n\n  year: s => {\n    let year = s.year();\n    if (year > 0) {\n      return year\n    }\n    year = Math.abs(year);\n    return year + ' BC'\n  },\n  'year-short': s => {\n    let year = s.year();\n    if (year > 0) {\n      return `'${String(s.year()).substr(2, 4)}`\n    }\n    year = Math.abs(year);\n    return year + ' BC'\n  },\n  'iso-year': s => {\n    let year = s.year();\n    let isNegative = year < 0;\n    let str = fns.zeroPad(Math.abs(year), 4); //0-padded\n    if (isNegative) {\n      //negative years are for some reason 6-digits ('-00008')\n      str = fns.zeroPad(str, 6);\n      str = '-' + str;\n    }\n    return str\n  },\n\n  time: s => s.time(),\n  'time-24': s => `${s.hour24()}:${fns.zeroPad(s.minute())}`,\n  hour: s => s.hour12(),\n  'hour-pad': s => fns.zeroPad(s.hour12()),\n  'hour-24': s => s.hour24(),\n  'hour-24-pad': s => fns.zeroPad(s.hour24()),\n\n  minute: s => s.minute(),\n  'minute-pad': s => fns.zeroPad(s.minute()),\n  second: s => s.second(),\n  'second-pad': s => fns.zeroPad(s.second()),\n\n  ampm: s => s.ampm(),\n  quarter: s => 'Q' + s.quarter(),\n  season: s => s.season(),\n  era: s => s.era(),\n  json: s => s.json(),\n  timezone: s => s.timezone().name,\n  offset: s => _offset(s),\n\n  numeric: s => `${s.year()}/${fns.zeroPad(s.month() + 1)}/${fns.zeroPad(s.date())}`, // yyyy/mm/dd\n  'numeric-us': s => `${fns.zeroPad(s.month() + 1)}/${fns.zeroPad(s.date())}/${s.year()}`, // mm/dd/yyyy\n  'numeric-uk': s => `${fns.zeroPad(s.date())}/${fns.zeroPad(s.month() + 1)}/${s.year()}`, //dd/mm/yyyy\n  'mm/dd': s => `${fns.zeroPad(s.month() + 1)}/${fns.zeroPad(s.date())}`, //mm/dd\n\n  // ... https://en.wikipedia.org/wiki/ISO_8601 ;(((\n  iso: s => {\n    let year = s.format('iso-year');\n    let month = fns.zeroPad(s.month() + 1); //1-based months\n    let date = fns.zeroPad(s.date());\n    let hour = fns.zeroPad(s.h24());\n    let minute = fns.zeroPad(s.minute());\n    let second = fns.zeroPad(s.second());\n    let ms = fns.zeroPad(s.millisecond(), 3);\n    let offset = _offset(s);\n    return `${year}-${month}-${date}T${hour}:${minute}:${second}.${ms}${offset}` //2018-03-09T08:50:00.000-05:00\n  },\n  'iso-short': s => {\n    let month = fns.zeroPad(s.month() + 1); //1-based months\n    let date = fns.zeroPad(s.date());\n    return `${s.year()}-${month}-${date}` //2017-02-15\n  },\n  'iso-utc': s => {\n    return new Date(s.epoch).toISOString() //2017-03-08T19:45:28.367Z\n  },\n\n  //i made these up\n  nice: s => `${months.short()[s.month()]} ${fns.ordinal(s.date())}, ${s.time()}`,\n  'nice-year': s => `${months.short()[s.month()]} ${fns.ordinal(s.date())}, ${s.year()}`,\n  'nice-day': s =>\n    `${days.short()[s.day()]} ${fns.titleCase(months.short()[s.month()])} ${fns.ordinal(s.date())}`,\n  'nice-full': s =>\n    `${s.dayName()} ${fns.titleCase(s.monthName())} ${fns.ordinal(s.date())}, ${s.time()}`\n};\n//aliases\nconst aliases = {\n  'day-name': 'day',\n  'month-name': 'month',\n  'iso 8601': 'iso',\n  'time-h24': 'time-24',\n  'time-12': 'time',\n  'time-h12': 'time',\n  tz: 'timezone',\n  'day-num': 'day-number',\n  'month-num': 'month-number',\n  'month-iso': 'iso-month',\n  'year-iso': 'iso-year',\n  'nice-short': 'nice',\n  mdy: 'numeric-us',\n  dmy: 'numeric-uk',\n  ymd: 'numeric',\n  'yyyy/mm/dd': 'numeric',\n  'mm/dd/yyyy': 'numeric-us',\n  'dd/mm/yyyy': 'numeric-us',\n  'little-endian': 'numeric-uk',\n  'big-endian': 'numeric',\n  'day-nice': 'nice-day'\n};\nObject.keys(aliases).forEach(k => (format[k] = format[aliases[k]]));\n\nconst printFormat = (s, str = '') => {\n  //don't print anything if it's an invalid date\n  if (s.isValid() !== true) {\n    return ''\n  }\n  //support .format('month')\n  if (format.hasOwnProperty(str)) {\n    let out = format[str](s) || '';\n    if (str !== 'json') {\n      out = String(out);\n      if (str !== 'ampm') {\n        out = fns.titleCase(out);\n      }\n    }\n    return out\n  }\n  //support '{hour}:{minute}' notation\n  if (str.indexOf('{') !== -1) {\n    let sections = /\\{(.+?)\\}/g;\n    str = str.replace(sections, (_, fmt) => {\n      fmt = fmt.toLowerCase().trim();\n      if (format.hasOwnProperty(fmt)) {\n        return String(format[fmt](s) || '')\n      }\n      return ''\n    });\n    return str\n  }\n\n  return s.format('iso-short')\n};\nvar format_1 = printFormat;\n\nconst pad = fns.zeroPad;\nconst formatTimezone = fns.formatTimezone;\n//parse this insane unix-time-templating thing, from the 19th century\n//http://unicode.org/reports/tr35/tr35-25.html#Date_Format_Patterns\n\n//time-symbols we support\nconst mapping = {\n  G: s => s.era(),\n  GG: s => s.era(),\n  GGG: s => s.era(),\n  GGGG: s => (s.era() === 'AD' ? 'Anno Domini' : 'Before Christ'),\n  //year\n  y: s => s.year(),\n  yy: s => {\n    //last two chars\n    return parseInt(String(s.year()).substr(2, 4), 10)\n  },\n  yyy: s => s.year(),\n  yyyy: s => s.year(),\n  yyyyy: s => '0' + s.year(),\n  // u: (s) => {},//extended non-gregorian years\n\n  //quarter\n  Q: s => s.quarter(),\n  QQ: s => s.quarter(),\n  QQQ: s => s.quarter(),\n  QQQQ: s => s.quarter(),\n\n  //month\n  M: s => s.month() + 1,\n  MM: s => pad(s.month() + 1),\n  MMM: s => s.format('month-short'),\n  MMMM: s => s.format('month'),\n\n  //week\n  w: s => s.week(),\n  ww: s => pad(s.week()),\n  //week of month\n  // W: (s) => s.week(),\n\n  //date of month\n  d: s => s.date(),\n  dd: s => pad(s.date()),\n  //date of year\n  D: s => s.dayOfYear(),\n  DD: s => pad(s.dayOfYear()),\n  DDD: s => pad(s.dayOfYear(), 3),\n\n  // F: (s) => {},//date of week in month\n  // g: (s) => {},//modified julian day\n\n  //day\n  E: s => s.format('day-short'),\n  EE: s => s.format('day-short'),\n  EEE: s => s.format('day-short'),\n  EEEE: s => s.format('day'),\n  EEEEE: s => s.format('day')[0],\n  e: s => s.day(),\n  ee: s => s.day(),\n  eee: s => s.format('day-short'),\n  eeee: s => s.format('day'),\n  eeeee: s => s.format('day')[0],\n\n  //am/pm\n  a: s => s.ampm().toUpperCase(),\n  aa: s => s.ampm().toUpperCase(),\n  aaa: s => s.ampm().toUpperCase(),\n  aaaa: s => s.ampm().toUpperCase(),\n\n  //hour\n  h: s => s.h12(),\n  hh: s => pad(s.h12()),\n  H: s => s.hour(),\n  HH: s => pad(s.hour()),\n  // j: (s) => {},//weird hour format\n\n  m: s => s.minute(),\n  mm: s => pad(s.minute()),\n  s: s => s.second(),\n  ss: s => pad(s.second()),\n  //milliseconds in the day\n  A: s => s.epoch - s.startOf('day').epoch,\n  //timezone\n  z: s => s.timezone().name,\n  zz: s => s.timezone().name,\n  zzz: s => s.timezone().name,\n  zzzz: s => s.timezone().name,\n  Z: s => formatTimezone(s.timezone().current.offset),\n  ZZ: s => formatTimezone(s.timezone().current.offset),\n  ZZZ: s => formatTimezone(s.timezone().current.offset),\n  ZZZZ: s => formatTimezone(s.timezone().current.offset, ':')\n};\n\nconst addAlias = (char, to, n) => {\n  let name = char;\n  let toName = to;\n  for (let i = 0; i < n; i += 1) {\n    mapping[name] = mapping[toName];\n    name += char;\n    toName += to;\n  }\n};\naddAlias('q', 'Q', 4);\naddAlias('L', 'M', 4);\naddAlias('Y', 'y', 4);\naddAlias('c', 'e', 4);\naddAlias('k', 'H', 2);\naddAlias('K', 'h', 2);\naddAlias('S', 's', 2);\naddAlias('v', 'z', 4);\naddAlias('V', 'Z', 4);\n\nconst unixFmt = (s, str) => {\n  let chars = str.split('');\n  //combine consecutive chars, like 'yyyy' as one.\n  let arr = [chars[0]];\n  let quoteOn = false;\n  for (let i = 1; i < chars.length; i += 1) {\n    //support quoted substrings\n    if (chars[i] === `'`) {\n      quoteOn = !quoteOn;\n      //support '', meaning one tick\n      if (quoteOn === true && chars[i + 1] && chars[i + 1] === \"'\") {\n        quoteOn = true;\n      } else {\n        continue\n      }\n    }\n    //merge it with the last one\n    if (quoteOn === true || chars[i] === arr[arr.length - 1][0]) {\n      arr[arr.length - 1] += chars[i];\n    } else {\n      arr.push(chars[i]);\n    }\n  }\n  return arr.reduce((txt, c) => {\n    if (mapping[c] !== undefined) {\n      txt += mapping[c](s) || '';\n    } else {\n      txt += c;\n    }\n    return txt\n  }, '')\n};\nvar unixFmt_1 = unixFmt;\n\nconst units$1 = ['year', 'season', 'quarter', 'month', 'week', 'day', 'quarterHour', 'hour', 'minute'];\n\nconst doUnit = function(s, k) {\n  let start = s.clone().startOf(k);\n  let end = s.clone().endOf(k);\n  let duration = end.epoch - start.epoch;\n  let percent = (s.epoch - start.epoch) / duration;\n  return parseFloat(percent.toFixed(2))\n};\n\n//how far it is along, from 0-1\nconst progress = (s, unit) => {\n  if (unit) {\n    unit = fns.normalize(unit);\n    return doUnit(s, unit)\n  }\n  let obj = {};\n  units$1.forEach(k => {\n    obj[k] = doUnit(s, k);\n  });\n  return obj\n};\n\nvar progress_1 = progress;\n\n//round to either current, or +1 of this unit\nconst nearest = (s, unit) => {\n  //how far have we gone?\n  let prog = s.progress();\n  unit = fns.normalize(unit);\n  //fix camel-case for this one\n  if (unit === 'quarterhour') {\n    unit = 'quarterHour';\n  }\n  if (prog[unit] !== undefined) {\n    // go forward one?\n    if (prog[unit] > 0.5) {\n      s = s.add(1, unit);\n    }\n    // go to start\n    s = s.startOf(unit);\n  } else if (s.silent === false) {\n    console.warn(\"no known unit '\" + unit + \"'\");\n  }\n  return s\n};\nvar nearest_1 = nearest;\n\n//increment until dates are the same\nconst climb = (a, b, unit) => {\n  let i = 0;\n  a = a.clone();\n  while (a.isBefore(b)) {\n    //do proper, expensive increment to catch all-the-tricks\n    a = a.add(1, unit);\n    i += 1;\n  }\n  //oops, we went too-far..\n  if (a.isAfter(b, unit)) {\n    i -= 1;\n  }\n  return i\n};\n\n// do a thurough +=1 on the unit, until they match\n// for speed-reasons, only used on day, month, week.\nconst diffOne = (a, b, unit) => {\n  if (a.isBefore(b)) {\n    return climb(a, b, unit)\n  } else {\n    return climb(b, a, unit) * -1 //reverse it\n  }\n};\n\nvar one = diffOne;\n\n// don't do anything too fancy here.\n// 2020 - 2019 may be 1 year, or 0 years\n// - '1 year difference' means 366 days during a leap year\nconst fastYear = (a, b) => {\n  let years = b.year() - a.year();\n  // should we decrement it by 1?\n  a = a.year(b.year());\n  if (a.isAfter(b)) {\n    years -= 1;\n  }\n  return years\n};\n\n// use a waterfall-method for computing a diff of any 'pre-knowable' units\n// compute years, then compute months, etc..\n// ... then ms-math for any very-small units\nconst diff = function(a, b) {\n  // an hour is always the same # of milliseconds\n  // so these units can be 'pre-calculated'\n  let msDiff = b.epoch - a.epoch;\n  let obj = {\n    milliseconds: msDiff,\n    seconds: parseInt(msDiff / 1000, 10)\n  };\n  obj.minutes = parseInt(obj.seconds / 60, 10);\n  obj.hours = parseInt(obj.minutes / 60, 10);\n\n  //do the year\n  let tmp = a.clone();\n  obj.years = fastYear(tmp, b);\n  tmp = a.add(obj.years, 'year');\n\n  //there's always 12 months in a year...\n  obj.months = obj.years * 12;\n  tmp = a.add(obj.months, 'month');\n  obj.months += one(tmp, b, 'month');\n\n  // there's always atleast 52 weeks in a year..\n  // (month * 4) isn't as close\n  obj.weeks = obj.years * 52;\n  tmp = a.add(obj.weeks, 'week');\n  obj.weeks += one(tmp, b, 'week');\n\n  // there's always atleast 7 days in a week\n  obj.days = obj.weeks * 7;\n  tmp = a.add(obj.days, 'day');\n  obj.days += one(tmp, b, 'day');\n\n  return obj\n};\nvar waterfall = diff;\n\nconst reverseDiff = function(obj) {\n  Object.keys(obj).forEach(k => {\n    obj[k] *= -1;\n  });\n  return obj\n};\n\n// this method counts a total # of each unit, between a, b.\n// '1 month' means 28 days in february\n// '1 year' means 366 days in a leap year\nconst main = function(a, b, unit) {\n  b = fns.beADate(b, a);\n  //reverse values, if necessary\n  let reversed = false;\n  if (a.isAfter(b)) {\n    let tmp = a;\n    a = b;\n    b = tmp;\n    reversed = true;\n  }\n  //compute them all (i know!)\n  let obj = waterfall(a, b);\n  if (reversed) {\n    obj = reverseDiff(obj);\n  }\n  //return just the requested unit\n  if (unit) {\n    //make sure it's plural-form\n    unit = fns.normalize(unit);\n    if (/s$/.test(unit) !== true) {\n      unit += 's';\n    }\n    if (unit === 'dates') {\n      unit = 'days';\n    }\n    return obj[unit]\n  }\n  return obj\n};\n\nvar diff$1 = main;\n\n//by spencermountain + Shaun Grady\n\n//our conceptual 'break-points' for each unit\nconst qualifiers = {\n  months: {\n    almost: 10,\n    over: 4\n  },\n  days: {\n    almost: 25,\n    over: 10\n  },\n  hours: {\n    almost: 20,\n    over: 8\n  },\n  minutes: {\n    almost: 50,\n    over: 20\n  },\n  seconds: {\n    almost: 50,\n    over: 20\n  }\n};\n\n//get number of hours/minutes... between the two dates\nfunction getDiff(a, b) {\n  const isBefore = a.isBefore(b);\n  const later = isBefore ? b : a;\n  let earlier = isBefore ? a : b;\n  earlier = earlier.clone();\n  const diff = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0\n  };\n  Object.keys(diff).forEach(unit => {\n    if (earlier.isSame(later, unit)) {\n      return\n    }\n    let max = earlier.diff(later, unit);\n    earlier = earlier.add(max, unit);\n    diff[unit] = max;\n  });\n\n  //reverse it, if necessary\n  if (isBefore) {\n    Object.keys(diff).forEach(u => {\n      if (diff[u] !== 0) {\n        diff[u] *= -1;\n      }\n    });\n  }\n  return diff\n}\n\n// Expects a plural unit arg\nfunction pluralize(value, unit) {\n  if (value === 1) {\n    unit = unit.slice(0, -1);\n  }\n  return value + ' ' + unit\n}\n\n//create the human-readable diff between the two dates\nconst since = (start, end) => {\n  end = fns.beADate(end, start);\n  const diff = getDiff(start, end);\n  const isNow = Object.keys(diff).every(u => !diff[u]);\n  if (isNow === true) {\n    return {\n      diff,\n      rounded: 'now',\n      qualified: 'now',\n      precise: 'now'\n    }\n  }\n  let rounded;\n  let qualified;\n  let precise;\n  let englishValues = [];\n\n  //go through each value and create its text-representation\n  Object.keys(diff).forEach((unit, i, units) => {\n    const value = Math.abs(diff[unit]);\n    if (value === 0) {\n      return\n    }\n    const englishValue = pluralize(value, unit);\n    englishValues.push(englishValue);\n    if (!rounded) {\n      rounded = qualified = englishValue;\n      if (i > 4) {\n        return\n      }\n      //is it a 'almost' something, etc?\n      const nextUnit = units[i + 1];\n      const nextValue = Math.abs(diff[nextUnit]);\n      if (nextValue > qualifiers[nextUnit].almost) {\n        rounded = pluralize(value + 1, unit);\n        qualified = 'almost ' + rounded;\n      } else if (nextValue > qualifiers[nextUnit].over) qualified = 'over ' + englishValue;\n    }\n  });\n  //make them into a string\n  precise = englishValues.splice(0, 2).join(', ');\n  //handle before/after logic\n  if (start.isAfter(end) === true) {\n    rounded += ' ago';\n    qualified += ' ago';\n    precise += ' ago';\n  } else {\n    rounded = 'in ' + rounded;\n    qualified = 'in ' + qualified;\n    precise = 'in ' + precise;\n  }\n  return {\n    diff,\n    rounded,\n    qualified,\n    precise\n  }\n};\n\nvar since_1 = since;\n\n//https://www.timeanddate.com/calendar/aboutseasons.html\n// Spring - from March 1 to May 31;\n// Summer - from June 1 to August 31;\n// Fall (autumn) - from September 1 to November 30; and,\n// Winter - from December 1 to February 28 (February 29 in a leap year).\nvar seasons = {\n  north: [\n    ['spring', 2, 1], //spring march 1\n    ['summer', 5, 1], //june 1\n    ['fall', 8, 1], //sept 1\n    ['autumn', 8, 1], //sept 1\n    ['winter', 11, 1] //dec 1\n  ],\n  south: [\n    ['fall', 2, 1], //march 1\n    ['autumn', 2, 1], //march 1\n    ['winter', 5, 1], //june 1\n    ['spring', 8, 1], //sept 1\n    ['summer', 11, 1] //dec 1\n  ]\n};\n\nvar quarters = [\n  null,\n  [0, 1], //jan 1\n  [3, 1], //apr 1\n  [6, 1], //july 1\n  [9, 1] //oct 1\n];\n\nconst units$2 = {\n  minute: s => {\n    walk_1(s, {\n      second: 0,\n      millisecond: 0\n    });\n    return s\n  },\n  quarterhour: s => {\n    let minute = s.minutes();\n    if (minute >= 45) {\n      s = s.minutes(45);\n    } else if (minute >= 30) {\n      s = s.minutes(30);\n    } else if (minute >= 15) {\n      s = s.minutes(15);\n    } else {\n      s = s.minutes(0);\n    }\n    walk_1(s, {\n      second: 0,\n      millisecond: 0\n    });\n    return s\n  },\n  hour: s => {\n    walk_1(s, {\n      minute: 0,\n      second: 0,\n      millisecond: 0\n    });\n    return s\n  },\n  day: s => {\n    walk_1(s, {\n      hour: 0,\n      minute: 0,\n      second: 0,\n      millisecond: 0\n    });\n    return s\n  },\n  week: s => {\n    let original = s.clone();\n    s = s.day(s._weekStart); //monday\n    if (s.isAfter(original)) {\n      s = s.subtract(1, 'week');\n    }\n    walk_1(s, {\n      hour: 0,\n      minute: 0,\n      second: 0,\n      millisecond: 0\n    });\n    return s\n  },\n  month: s => {\n    walk_1(s, {\n      date: 1,\n      hour: 0,\n      minute: 0,\n      second: 0,\n      millisecond: 0\n    });\n    return s\n  },\n  quarter: s => {\n    let q = s.quarter();\n    if (quarters[q]) {\n      walk_1(s, {\n        month: quarters[q][0],\n        date: quarters[q][1],\n        hour: 0,\n        minute: 0,\n        second: 0,\n        millisecond: 0\n      });\n    }\n    return s\n  },\n  season: s => {\n    let current = s.season();\n    let hem = 'north';\n    if (s.hemisphere() === 'South') {\n      hem = 'south';\n    }\n    for (let i = 0; i < seasons[hem].length; i++) {\n      if (seasons[hem][i][0] === current) {\n        //winter goes between years\n        let year = s.year();\n        if (current === 'winter' && s.month() < 3) {\n          year -= 1;\n        }\n        walk_1(s, {\n          year,\n          month: seasons[hem][i][1],\n          date: seasons[hem][i][2],\n          hour: 0,\n          minute: 0,\n          second: 0,\n          millisecond: 0\n        });\n        return s\n      }\n    }\n    return s\n  },\n  year: s => {\n    walk_1(s, {\n      month: 0,\n      date: 1,\n      hour: 0,\n      minute: 0,\n      second: 0,\n      millisecond: 0\n    });\n    return s\n  },\n  decade: s => {\n    s = s.startOf('year');\n    let year = s.year();\n    let decade = parseInt(year / 10, 10) * 10;\n    s = s.year(decade);\n    return s\n  },\n  century: s => {\n    s = s.startOf('year');\n    let year = s.year();\n    // near 0AD goes '-1 | +1'\n    let decade = parseInt(year / 100, 10) * 100;\n    s = s.year(decade);\n    return s\n  }\n};\nunits$2.date = units$2.day;\n\nconst startOf = (a, unit) => {\n  let s = a.clone();\n  unit = fns.normalize(unit);\n  if (units$2[unit]) {\n    return units$2[unit](s)\n  }\n  if (unit === 'summer' || unit === 'winter') {\n    s = s.season(unit);\n    return units$2.season(s)\n  }\n  return s\n};\n\n//piggy-backs off startOf\nconst endOf = (a, unit) => {\n  let s = a.clone();\n  unit = fns.normalize(unit);\n  if (units$2[unit]) {\n    s = units$2[unit](s);\n    s = s.add(1, unit);\n    s = s.subtract(1, 'milliseconds');\n    return s\n  }\n  return s\n};\nvar startOf_1 = {\n  startOf,\n  endOf\n};\n\n//is it 'wednesday'?\nconst isDay = function(unit) {\n  if (days.short().find(s => s === unit)) {\n    return true\n  }\n  if (days.long().find(s => s === unit)) {\n    return true\n  }\n  return false\n};\n\n// return a list of the weeks/months/days between a -> b\n// returns spacetime objects in the timezone of the input\nconst every = function(start, unit = '', end) {\n  if (!unit || !end) {\n    return []\n  }\n  //cleanup unit param\n  unit = fns.normalize(unit);\n  //cleanup to param\n  end = start.clone().set(end);\n  //swap them, if they're backwards\n  if (start.isAfter(end)) {\n    let tmp = start;\n    start = end;\n    end = tmp;\n  }\n\n  //support 'every wednesday'\n  let d = start.clone();\n  if (isDay(unit)) {\n    d = d.next(unit);\n    unit = 'week';\n  } else {\n    d = d.next(unit);\n  }\n  //okay, actually start doing it\n  let result = [];\n  while (d.isBefore(end)) {\n    result.push(d);\n    d = d.add(1, unit);\n  }\n  return result\n};\nvar every_1 = every;\n\nconst parseDst = dst => {\n  if (!dst) {\n    return []\n  }\n  return dst.split('->')\n};\n\nconst titleCase = str => {\n  str = str[0].toUpperCase() + str.substr(1);\n  str = str.replace(/\\/gmt/, '/GMT');\n  str = str.replace(/[\\/_]([a-z])/gi, s => {\n    return s.toUpperCase()\n  });\n  return str\n};\n\n//get metadata about this timezone\nconst timezone = s => {\n  let zones = s.timezones;\n  let tz = s.tz;\n  if (zones.hasOwnProperty(tz) === false) {\n    tz = find(s.tz, zones);\n  }\n  if (tz === null) {\n    if (s.silent === false) {\n      console.warn(\"Warn: could not find given or local timezone - '\" + s.tz + \"'\");\n    }\n    return {\n      current: {\n        epochShift: 0\n      }\n    }\n  }\n  let found = zones[tz];\n  let result = {\n    name: titleCase(tz),\n    hasDst: Boolean(found.dst),\n    default_offset: found.offset,\n    //do north-hemisphere version as default (sorry!)\n    hemisphere: found.hem === 's' ? 'South' : 'North',\n    current: {}\n  };\n\n  if (result.hasDst) {\n    let arr = parseDst(found.dst);\n    result.change = {\n      start: arr[0],\n      back: arr[1]\n    };\n  }\n  //find the offsets for summer/winter times\n  //(these variable names are north-centric)\n  let summer = found.offset; // (july)\n  let winter = summer; // (january) assume it's the same for now\n  if (result.hasDst === true) {\n    if (result.hemisphere === 'North') {\n      winter = summer - 1;\n    } else {\n      //southern hemisphere\n      winter = found.offset + 1;\n    }\n  }\n\n  //find out which offset to use right now\n  //use 'summer' time july-time\n  if (result.hasDst === false) {\n    result.current.offset = summer;\n    result.current.isDST = false;\n  } else if (summerTime(s.epoch, result.change.start, result.change.back, summer) === true) {\n    result.current.offset = summer;\n    result.current.isDST = result.hemisphere === 'North'; //dst 'on' in winter in north\n  } else {\n    //use 'winter' january-time\n    result.current.offset = winter;\n    result.current.isDST = result.hemisphere === 'South'; //dst 'on' in summer in south\n  }\n  return result\n};\nvar timezone_1 = timezone;\n\nconst units$3 = [\n  'century',\n  'decade',\n  'year',\n  'month',\n  'date',\n  'day',\n  'hour',\n  'minute',\n  'second',\n  'millisecond'\n];\n\n//the spacetime instance methods (also, the API)\nconst methods = {\n  set: function(input$1, tz) {\n    let s = this.clone();\n    s = input(s, input$1);\n    if (tz) {\n      this.tz = find(tz);\n    }\n    return s\n  },\n  timezone: function() {\n    return timezone_1(this)\n  },\n  isDST: function() {\n    return timezone_1(this).current.isDST\n  },\n  hasDST: function() {\n    return timezone_1(this).hasDst\n  },\n  offset: function() {\n    return timezone_1(this).current.offset * 60\n  },\n  hemisphere: function() {\n    return timezone_1(this).hemisphere\n  },\n  format: function(fmt) {\n    return format_1(this, fmt)\n  },\n  unixFmt: function(fmt) {\n    return unixFmt_1(this, fmt)\n  },\n  startOf: function(unit) {\n    return startOf_1.startOf(this, unit)\n  },\n  endOf: function(unit) {\n    return startOf_1.endOf(this, unit)\n  },\n  leapYear: function() {\n    let year = this.year();\n    return fns.isLeapYear(year)\n  },\n  progress: function(unit) {\n    return progress_1(this, unit)\n  },\n  nearest: function(unit) {\n    return nearest_1(this, unit)\n  },\n  diff: function(d, unit) {\n    return diff$1(this, d, unit)\n  },\n  since: function(d) {\n    if (!d) {\n      d = this.clone().set();\n    }\n    return since_1(this, d)\n  },\n  next: function(unit) {\n    let s = this.add(1, unit);\n    return s.startOf(unit)\n  },\n  //the start of the previous year/week/century\n  last: function(unit) {\n    let s = this.subtract(1, unit);\n    return s.startOf(unit)\n  },\n  isValid: function() {\n    //null/undefined epochs\n    if (!this.epoch && this.epoch !== 0) {\n      return false\n    }\n    return !isNaN(this.d.getTime())\n  },\n  //travel to this timezone\n  goto: function(tz) {\n    let s = this.clone();\n    s.tz = find(tz, s.timezones); //science!\n    return s\n  },\n  //get each week/month/day between a -> b\n  every: function(unit, to) {\n    return every_1(this, unit, to)\n  },\n  isAwake: function() {\n    let hour = this.hour();\n    //10pm -> 8am\n    if (hour < 8 || hour > 22) {\n      return false\n    }\n    return true\n  },\n  isAsleep: function() {\n    return !this.isAwake()\n  },\n  //pretty-printing\n  log: function() {\n    console.log('');\n    console.log(format_1(this, 'nice-short'));\n    return this\n  },\n  logYear: function() {\n    console.log('');\n    console.log(format_1(this, 'full-short'));\n    return this\n  },\n  json: function() {\n    return units$3.reduce((h, unit) => {\n      h[unit] = this[unit]();\n      return h\n    }, {})\n  },\n  debug: function() {\n    let tz = this.timezone();\n    let date = this.format('MM') + ' ' + this.format('date-ordinal') + ' ' + this.year();\n    date += '\\n     - ' + this.format('time');\n    console.log('\\n\\n', date + '\\n     - ' + tz.name + ' (' + tz.current.offset + ')');\n    return this\n  },\n  //alias of 'since' but opposite - like moment.js\n  from: function(d) {\n    d = this.clone().set(d);\n    return d.since(this)\n  },\n  fromNow: function() {\n    let d = this.clone().set(Date.now());\n    return d.since(this)\n  },\n  weekStart: function(input) {\n    //accept a number directly\n    if (typeof input === 'number') {\n      this._weekStart = input;\n      return this\n    }\n    if (typeof input === 'string') {\n      // accept 'wednesday'\n      input = input.toLowerCase().trim();\n      let num = days.short().indexOf(input);\n      if (num === -1) {\n        num = days.long().indexOf(input);\n      }\n      if (num === -1) {\n        num = 1; //go back to default\n      }\n      this._weekStart = num;\n    } else {\n      console.warn('Spacetime Error: Cannot understand .weekStart() input:', input);\n    }\n    return this\n  }\n};\n// aliases\nmethods.inDST = methods.isDST;\nmethods.round = methods.nearest;\nmethods.each = methods.every;\nvar methods_1 = methods;\n\n// javascript setX methods like setDate() can't be used because of the local bias\n//these methods wrap around them.\n\n\n\n\n\nconst validate = n => {\n  //handle number as a string\n  if (typeof n === 'string') {\n    n = parseInt(n, 10);\n  }\n  return n\n};\n\nconst order = ['year', 'month', 'date', 'hour', 'minute', 'second', 'millisecond'];\n\n//reduce hostile micro-changes when moving dates by millisecond\nconst confirm = (s, tmp, unit) => {\n  let n = order.indexOf(unit);\n  let arr = order.slice(n, order.length);\n  for (let i = 0; i < arr.length; i++) {\n    let want = tmp[arr[i]]();\n    s[arr[i]](want);\n  }\n  return s\n};\n\nvar set = {\n  milliseconds: (s, n) => {\n    n = validate(n);\n    let current = s.millisecond();\n    let diff = current - n; //milliseconds to shift by\n    return s.epoch - diff\n  },\n\n  seconds: (s, n) => {\n    n = validate(n);\n    let diff = s.second() - n;\n    let shift = diff * milliseconds.second;\n    return s.epoch - shift\n  },\n\n  minutes: (s, n) => {\n    n = validate(n);\n    let old = s.clone();\n    let diff = s.minute() - n;\n    let shift = diff * milliseconds.minute;\n    s.epoch -= shift;\n    confirm(s, old, 'second');\n    return s.epoch\n  },\n\n  hours: (s, n) => {\n    n = validate(n);\n    if (n >= 24) {\n      n = 24;\n    } else if (n < 0) {\n      n = 0;\n    }\n    let old = s.clone();\n    let diff = s.hour() - n;\n    let shift = diff * milliseconds.hour;\n    s.epoch -= shift;\n    walk_1(s, {\n      hour: n\n    });\n    confirm(s, old, 'minute');\n    return s.epoch\n  },\n\n  //support setting time by '4:25pm' - this isn't very-well developed..\n  time: (s, str) => {\n    let m = str.match(/([0-9]{1,2}):([0-9]{1,2})(am|pm)?/);\n    if (!m) {\n      //fallback to support just '2am'\n      m = str.match(/([0-9]{1,2})(am|pm)/);\n      if (!m) {\n        return s.epoch\n      }\n      m.splice(2, 0, '0'); //add implicit 0 minutes\n    }\n    let h24 = false;\n    let hour = parseInt(m[1], 10);\n    let minute = parseInt(m[2], 10);\n    if (hour > 12) {\n      h24 = true;\n    }\n    //make the hour into proper 24h time\n    if (h24 === false) {\n      if (m[3] === 'am' && hour === 12) {\n        //12am is midnight\n        hour = 0;\n      }\n      if (m[3] === 'pm' && hour < 12) {\n        //12pm is noon\n        hour += 12;\n      }\n    }\n    s = s.hour(hour);\n    s = s.minute(minute);\n    s = s.second(0);\n    s = s.millisecond(0);\n    return s.epoch\n  },\n\n  date: (s, n) => {\n    n = validate(n);\n    //avoid setting february 31st\n    if (n > 28) {\n      const max = monthLengths_1[s.month()];\n      if (n > max) {\n        n = max;\n      }\n    }\n    //avoid setting < 0\n    if (n <= 0) {\n      n = 1;\n    }\n    walk_1(s, {\n      date: n\n    });\n    return s.epoch\n  },\n\n  //this one's tricky\n  month: (s, n) => {\n    if (typeof n === 'string') {\n      n = months.mapping()[n.toLowerCase()];\n    }\n    n = validate(n);\n    //don't go past december\n    if (n >= 12) {\n      n = 11;\n    }\n    if (n <= 0) {\n      n = 0;\n    }\n\n    let date = s.date();\n    //there's no 30th of february, etc.\n    if (date > monthLengths_1[n]) {\n      //make it as close as we can..\n      date = monthLengths_1[n];\n    }\n    walk_1(s, {\n      month: n,\n      date\n    });\n    return s.epoch\n  },\n\n  year: (s, n) => {\n    n = validate(n);\n    walk_1(s, {\n      year: n\n    });\n    return s.epoch\n  },\n\n  dayOfYear: (s, n) => {\n    n = validate(n);\n    let old = s.clone();\n    n -= 1; //days are 1-based\n    if (n <= 0) {\n      n = 0;\n    } else if (n >= 365) {\n      n = 364;\n    }\n    s = s.startOf('year');\n    s = s.add(n, 'day');\n    confirm(s, old, 'hour');\n    return s.epoch\n  }\n};\n\nconst methods$1 = {\n  millisecond: function(num) {\n    if (num !== undefined) {\n      let s = this.clone();\n      s.epoch = set.milliseconds(s, num);\n      return s\n    }\n    return this.d.getMilliseconds()\n  },\n  second: function(num) {\n    if (num !== undefined) {\n      let s = this.clone();\n      s.epoch = set.seconds(s, num);\n      return s\n    }\n    return this.d.getSeconds()\n  },\n  minute: function(num) {\n    if (num !== undefined) {\n      let s = this.clone();\n      s.epoch = set.minutes(s, num);\n      return s\n    }\n    return this.d.getMinutes()\n  },\n  hour: function(num) {\n    let d = this.d;\n    if (num !== undefined) {\n      let s = this.clone();\n      s.epoch = set.hours(s, num);\n      return s\n    }\n    return d.getHours()\n  },\n\n  //'3:30' is 3.5\n  hourFloat: function(num) {\n    if (num !== undefined) {\n      let s = this.clone();\n      let minute = num % 1;\n      minute = minute * 60;\n      let hour = parseInt(num, 10);\n      s.epoch = set.hours(s, hour);\n      s.epoch = set.minutes(s, minute);\n      return s\n    }\n    let d = this.d;\n    let hour = d.getHours();\n    let minute = d.getMinutes();\n    minute = minute / 60;\n    return hour + minute\n  },\n\n  // hour in 12h format\n  hour12: function(str) {\n    let d = this.d;\n    if (str !== undefined) {\n      let s = this.clone();\n      str = '' + str;\n      let m = str.match(/^([0-9]+)(am|pm)$/);\n      if (m) {\n        let hour = parseInt(m[1], 10);\n        if (m[2] === 'pm') {\n          hour += 12;\n        }\n        s.epoch = set.hours(s, hour);\n      }\n      return s\n    }\n    //get the hour\n    let hour12 = d.getHours();\n    if (hour12 > 12) {\n      hour12 = hour12 - 12;\n    }\n    if (hour12 === 0) {\n      hour12 = 12;\n    }\n    return hour12\n  },\n\n  //some ambiguity here with 12/24h\n  time: function(str) {\n    if (str !== undefined) {\n      let s = this.clone();\n      s.epoch = set.time(s, str);\n      return s\n    }\n    return `${this.h12()}:${fns.zeroPad(this.minute())}${this.ampm()}`\n  },\n\n  // either 'am' or 'pm'\n  ampm: function(input) {\n    let which = 'am';\n    let hour = this.hour();\n    if (hour >= 12) {\n      which = 'pm';\n    }\n    if (typeof input !== 'string') {\n      return which\n    }\n    //okay, we're doing a setter\n    let s = this.clone();\n    input = input.toLowerCase().trim();\n    //ampm should never change the day\n    // - so use `.hour(n)` instead of `.minus(12,'hour')`\n    if (hour >= 12 && input === 'am') {\n      //noon is 12pm\n      hour -= 12;\n      return s.hour(hour)\n    }\n    if (hour < 12 && input === 'pm') {\n      hour += 12;\n      return s.hour(hour)\n    }\n    return s\n  },\n\n  //some hard-coded times of day, like 'noon'\n  dayTime: function(str) {\n    if (str !== undefined) {\n      const times = {\n        morning: '7:00am',\n        breakfast: '7:00am',\n        noon: '12:00am',\n        lunch: '12:00pm',\n        afternoon: '2:00pm',\n        evening: '6:00pm',\n        dinner: '6:00pm',\n        night: '11:00pm',\n        midnight: '23:59pm'\n      };\n      let s = this.clone();\n      str = str || '';\n      str = str.toLowerCase();\n      if (times.hasOwnProperty(str) === true) {\n        s = s.time(times[str]);\n      }\n      return s\n    }\n    let h = this.hour();\n    if (h < 6) {\n      return 'night'\n    }\n    if (h < 12) {\n      //until noon\n      return 'morning'\n    }\n    if (h < 17) {\n      //until 5pm\n      return 'afternoon'\n    }\n    if (h < 22) {\n      //until 10pm\n      return 'evening'\n    }\n    return 'night'\n  },\n\n  //parse a proper iso string\n  iso: function(num) {\n    if (num !== undefined) {\n      return this.set(num)\n    }\n    return this.format('iso')\n  }\n};\nvar _01Time = methods$1;\n\nconst methods$2 = {\n  // # day in the month\n  date: function(num) {\n    if (num !== undefined) {\n      let s = this.clone();\n      s.epoch = set.date(s, num);\n      return s\n    }\n    return this.d.getDate()\n  },\n\n  //like 'wednesday' (hard!)\n  day: function(input) {\n    if (input === undefined) {\n      return this.d.getDay()\n    }\n    let original = this.clone();\n    let want = input;\n    // accept 'wednesday'\n    if (typeof input === 'string') {\n      input = input.toLowerCase();\n      want = days.short().indexOf(input);\n      if (want === -1) {\n        want = days.long().indexOf(input);\n      }\n    }\n    //move approx\n    let day = this.d.getDay();\n    let diff = day - want;\n    let s = this.subtract(diff * 24, 'hours');\n    //tighten it back up\n    walk_1(s, {\n      hour: original.hour(),\n      minute: original.minute(),\n      second: original.second()\n    });\n    return s\n  },\n\n  //these are helpful name-wrappers\n  dayName: function(input) {\n    if (input === undefined) {\n      return days.long()[this.day()]\n    }\n    let s = this.clone();\n    s = s.day(input);\n    return s\n  },\n\n  //either name or number\n  month: function(input) {\n    if (input !== undefined) {\n      let s = this.clone();\n      s.epoch = set.month(s, input);\n      return s\n    }\n    return this.d.getMonth()\n  }\n};\nvar _02Date = methods$2;\n\nconst clearMinutes = s => {\n  s = s.minute(0);\n  s = s.second(0);\n  s = s.millisecond(1);\n  return s\n};\n\nconst methods$3 = {\n  // day 0-366\n  dayOfYear: function(num) {\n    if (num !== undefined) {\n      let s = this.clone();\n      s.epoch = set.dayOfYear(s, num);\n      return s\n    }\n    //days since newyears - jan 1st is 1, jan 2nd is 2...\n    let sum = 0;\n    let month = this.d.getMonth();\n    let tmp;\n    //count the num days in each month\n    for (let i = 1; i <= month; i++) {\n      tmp = new Date();\n      tmp.setDate(1);\n      tmp.setFullYear(this.d.getFullYear()); //the year matters, because leap-years\n      tmp.setHours(1);\n      tmp.setMinutes(1);\n      tmp.setMonth(i);\n      tmp.setHours(-2); //the last day of the month\n      sum += tmp.getDate();\n    }\n    return sum + this.d.getDate()\n  },\n\n  //since the start of the year\n  week: function(num) {\n    // week-setter\n    if (num !== undefined) {\n      let s = this.clone();\n      s = s.month(0);\n      s = s.date(1);\n      s = s.day('monday');\n      s = clearMinutes(s);\n      //don't go into last-year\n      if (s.monthName() === 'december') {\n        s = s.add(1, 'week');\n      }\n      num -= 1; //1-based\n      s = s.add(num, 'weeks');\n      return s\n    }\n    //find-out which week it is\n    let tmp = this.clone();\n    tmp = tmp.month(0);\n    tmp = tmp.date(1);\n    tmp = clearMinutes(tmp);\n    tmp = tmp.day('monday');\n    //don't go into last-year\n    if (tmp.monthName() === 'december') {\n      tmp = tmp.add(1, 'week');\n    }\n    // is first monday the 1st?\n    let toAdd = 1;\n    if (tmp.date() === 1) {\n      toAdd = 0;\n    }\n    tmp = tmp.minus(1, 'second');\n    const thisOne = this.epoch;\n    //if the week technically hasn't started yet\n    if (tmp.epoch > thisOne) {\n      return 1\n    }\n    //speed it up, if we can\n    let i = 0;\n    let skipWeeks = this.month() * 4;\n    tmp.epoch += milliseconds.week * skipWeeks;\n    i += skipWeeks;\n    for (; i < 52; i++) {\n      if (tmp.epoch > thisOne) {\n        return i + toAdd\n      }\n      tmp = tmp.add(1, 'week');\n    }\n    return 52\n  },\n\n  //'january'\n  monthName: function(input) {\n    if (input === undefined) {\n      return months.long()[this.month()]\n    }\n    let s = this.clone();\n    s = s.month(input);\n    return s\n  },\n\n  //q1, q2, q3, q4\n  quarter: function(num) {\n    if (num !== undefined) {\n      if (typeof num === 'string') {\n        num = num.replace(/^q/i, '');\n        num = parseInt(num, 10);\n      }\n      if (quarters[num]) {\n        let s = this.clone();\n        let month = quarters[num][0];\n        s = s.month(month);\n        s = s.date(1);\n        s = s.startOf('day');\n        return s\n      }\n    }\n    let month = this.d.getMonth();\n    for (let i = 1; i < quarters.length; i++) {\n      if (month < quarters[i][0]) {\n        return i - 1\n      }\n    }\n    return 4\n  },\n\n  //spring, summer, winter, fall\n  season: function(input) {\n    let hem = 'north';\n    if (this.hemisphere() === 'South') {\n      hem = 'south';\n    }\n    if (input !== undefined) {\n      let s = this.clone();\n      for (let i = 0; i < seasons[hem].length; i++) {\n        if (input === seasons[hem][i][0]) {\n          s = s.month(seasons[hem][i][1]);\n          s = s.date(1);\n          s = s.startOf('day');\n        }\n      }\n      return s\n    }\n    let month = this.d.getMonth();\n    for (let i = 0; i < seasons[hem].length - 1; i++) {\n      if (month >= seasons[hem][i][1] && month < seasons[hem][i + 1][1]) {\n        return seasons[hem][i][0]\n      }\n    }\n    return 'winter'\n  },\n\n  //the year number\n  year: function(num) {\n    if (num !== undefined) {\n      let s = this.clone();\n      s.epoch = set.year(s, num);\n      return s\n    }\n    return this.d.getFullYear()\n  },\n\n  //bc/ad years\n  era: function(str) {\n    if (str !== undefined) {\n      let s = this.clone();\n      str = str.toLowerCase();\n      //TODO: there is no year-0AD i think. may have off-by-1 error here\n      let year = s.d.getFullYear();\n      //make '1992' into 1992bc..\n      if (str === 'bc' && year > 0) {\n        s.epoch = set.year(s, year * -1);\n      }\n      //make '1992bc' into '1992'\n      if (str === 'ad' && year < 0) {\n        s.epoch = set.year(s, year * -1);\n      }\n      return s\n    }\n    if (this.d.getFullYear() < 0) {\n      return 'BC'\n    }\n    return 'AD'\n  },\n\n  // 2019 -> 2010\n  decade: function(input) {\n    if (input !== undefined) {\n      input = String(input);\n      input = input.replace(/([0-9])'?s$/, '$1'); //1950's\n      input = input.replace(/([0-9])(th|rd|st|nd)/, '$1'); //fix ordinals\n      if (!input) {\n        console.warn('Spacetime: Invalid decade input');\n        return this\n      }\n      // assume 20th century?? for '70s'.\n      if (input.length === 2 && /[0-9][0-9]/.test(input)) {\n        input = '19' + input;\n      }\n      let year = Number(input);\n      if (isNaN(year)) {\n        return this\n      }\n      // round it down to the decade\n      year = Math.floor(year / 10) * 10;\n      return this.year(year) //.startOf('decade')\n    }\n    return this.startOf('decade').year()\n  },\n  // 1950 -> 19+1\n  century: function(input) {\n    if (input !== undefined) {\n      if (typeof input === 'string') {\n        input = input.replace(/([0-9])(th|rd|st|nd)/, '$1'); //fix ordinals\n        input = input.replace(/([0-9]+) ?(b\\.?c\\.?|a\\.?d\\.?)/i, (a, b, c) => {\n          if (c.match(/b\\.?c\\.?/i)) {\n            b = '-' + b;\n          }\n          return b\n        });\n        input = input.replace(/c$/, ''); //20thC\n      }\n      let year = Number(input);\n      if (isNaN(input)) {\n        console.warn('Spacetime: Invalid century input');\n        return this\n      }\n      // there is no century 0\n      if (year === 0) {\n        year = 1;\n      }\n      if (year >= 0) {\n        year = (year - 1) * 100;\n      } else {\n        year = (year + 1) * 100;\n      }\n      return this.year(year)\n    }\n    // century getter\n    let num = this.startOf('century').year();\n    num = Math.floor(num / 100);\n    if (num < 0) {\n      return num - 1\n    }\n    return num + 1\n  },\n  // 2019 -> 2+1\n  millenium: function(input) {\n    if (input !== undefined) {\n      if (typeof input === 'string') {\n        input = input.replace(/([0-9])(th|rd|st|nd)/, '$1'); //fix ordinals\n        input = Number(input);\n        if (isNaN(input)) {\n          console.warn('Spacetime: Invalid millenium input');\n          return this\n        }\n      }\n      if (input > 0) {\n        input -= 1;\n      }\n      let year = input * 1000;\n      // there is no year 0\n      if (year === 0) {\n        year = 1;\n      }\n      return this.year(year)\n    }\n    // get the current millenium\n    let num = Math.floor(this.year() / 1000);\n    if (num >= 0) {\n      num += 1;\n    }\n    return num\n  }\n};\nvar _03Year = methods$3;\n\nconst methods$4 = Object.assign({}, _01Time, _02Date, _03Year);\n\n//aliases\nmethods$4.milliseconds = methods$4.millisecond;\nmethods$4.seconds = methods$4.second;\nmethods$4.minutes = methods$4.minute;\nmethods$4.hours = methods$4.hour;\nmethods$4.hour24 = methods$4.hour;\nmethods$4.h12 = methods$4.hour12;\nmethods$4.h24 = methods$4.hour24;\nmethods$4.days = methods$4.day;\n\nconst addMethods = Space => {\n  //hook the methods into prototype\n  Object.keys(methods$4).forEach(k => {\n    Space.prototype[k] = methods$4[k];\n  });\n};\n\nvar query = addMethods;\n\nconst order$1 = ['millisecond', 'second', 'minute', 'hour', 'date', 'month'];\nlet keep = {\n  second: order$1.slice(0, 1),\n  minute: order$1.slice(0, 2),\n  quarterhour: order$1.slice(0, 2),\n  hour: order$1.slice(0, 3),\n  date: order$1.slice(0, 4),\n  month: order$1.slice(0, 4),\n  quarter: order$1.slice(0, 4),\n  season: order$1.slice(0, 4),\n  year: order$1,\n  decade: order$1,\n  century: order$1\n};\nkeep.week = keep.hour;\nkeep.season = keep.date;\nkeep.quarter = keep.date;\n\n// Units need to be dst adjuested\nconst dstAwareUnits = {\n  year: true,\n  quarter: true,\n  season: true,\n  month: true,\n  week: true,\n  day: true\n};\n\nconst keepDate = {\n  month: true,\n  quarter: true,\n  season: true,\n  year: true\n};\n//month is the only thing we 'model/compute'\n//- because ms-shifting can be off by enough\nconst rollMonth = (want, old) => {\n  //increment year\n  if (want.month > 0) {\n    let years = parseInt(want.month / 12, 10);\n    want.year = old.year() + years;\n    want.month = want.month % 12;\n  } else if (want.month < 0) {\n    //decrement year\n    let years = Math.floor(Math.abs(want.month) / 13, 10);\n    years = Math.abs(years) + 1;\n    want.year = old.year() - years;\n    //ignore extras\n    want.month = want.month % 12;\n    want.month = want.month + 12;\n    if (want.month === 12) {\n      want.month = 0;\n    }\n  }\n  return want\n};\n\nconst addMethods$1 = SpaceTime => {\n  SpaceTime.prototype.add = function(num, unit) {\n    let s = this.clone();\n    if (!unit || num === 0) {\n      return s //don't bother\n    }\n    let old = this.clone();\n    unit = fns.normalize(unit);\n    //move forward by the estimated milliseconds (rough)\n    if (milliseconds[unit]) {\n      s.epoch += milliseconds[unit] * num;\n    } else if (unit === 'week') {\n      s.epoch += milliseconds.day * (num * 7);\n    } else if (unit === 'quarter' || unit === 'season') {\n      s.epoch += milliseconds.month * (num * 4);\n    } else if (unit === 'season') {\n      s.epoch += milliseconds.month * (num * 4);\n    } else if (unit === 'quarterhour') {\n      s.epoch += milliseconds.minute * 15 * num;\n    }\n    //now ensure our milliseconds/etc are in-line\n    let want = {};\n    if (keep[unit]) {\n      keep[unit].forEach(u => {\n        want[u] = old[u]();\n      });\n    }\n\n    if (dstAwareUnits[unit]) {\n      const diff = old.timezone().current.offset - s.timezone().current.offset;\n      s.epoch += diff * 3600 * 1000;\n    }\n\n    //ensure month/year has ticked-over\n    if (unit === 'month') {\n      want.month = old.month() + num;\n      //month is the one unit we 'model' directly\n      want = rollMonth(want, old);\n    }\n    //support coercing a week, too\n    if (unit === 'week') {\n      let sum = old.date() + num * 7;\n      if (sum <= 28 && sum > 1) {\n        want.date = sum;\n      }\n    }\n    //support 25-hour day-changes on dst-changes\n    else if (unit === 'date') {\n      //specify a naive date number, if it's easy to do...\n      let sum = old.date() + num;\n      if (sum <= 28 && sum > 1) {\n        want.date = sum;\n      }\n      //or if we haven't moved at all..\n      else if (num !== 0 && old.isSame(s, 'day')) {\n        want.date = old.date() + num;\n      }\n    }\n    //ensure year has changed (leap-years)\n    else if (unit === 'year' && s.year() === old.year()) {\n      s.epoch += milliseconds.week;\n    }\n    //these are easier\n    else if (unit === 'decade') {\n      want.year = s.year() + 10;\n    } else if (unit === 'century') {\n      want.year = s.year() + 100;\n    }\n    //keep current date, unless the month doesn't have it.\n    if (keepDate[unit]) {\n      let max = monthLengths_1[want.month];\n      want.date = old.date();\n      if (want.date > max) {\n        want.date = max;\n      }\n    }\n    walk_1(s, want);\n    return s\n  };\n\n  //subtract is only add *-1\n  SpaceTime.prototype.subtract = function(num, unit) {\n    let s = this.clone();\n    return s.add(num * -1, unit)\n  };\n  //add aliases\n  SpaceTime.prototype.minus = SpaceTime.prototype.subtract;\n  SpaceTime.prototype.plus = SpaceTime.prototype.add;\n};\n\nvar add = addMethods$1;\n\n//make a string, for easy comparison between dates\nconst print = {\n  millisecond: s => {\n    return s.epoch\n  },\n  second: s => {\n    return [s.year(), s.month(), s.date(), s.hour(), s.minute(), s.second()].join('-')\n  },\n  minute: s => {\n    return [s.year(), s.month(), s.date(), s.hour(), s.minute()].join('-')\n  },\n  hour: s => {\n    return [s.year(), s.month(), s.date(), s.hour()].join('-')\n  },\n  day: s => {\n    return [s.year(), s.month(), s.date()].join('-')\n  },\n  week: s => {\n    return [s.year(), s.week()].join('-')\n  },\n  month: s => {\n    return [s.year(), s.month()].join('-')\n  },\n  quarter: s => {\n    return [s.year(), s.quarter()].join('-')\n  },\n  year: s => {\n    return s.year()\n  }\n};\nprint.date = print.day;\n\nconst addMethods$2 = SpaceTime => {\n  SpaceTime.prototype.isSame = function(b, unit) {\n    let a = this;\n    if (!unit) {\n      return null\n    }\n    if (typeof b === 'string' || typeof b === 'number') {\n      b = new SpaceTime(b, this.timezone.name);\n    }\n    //support 'seconds' aswell as 'second'\n    unit = unit.replace(/s$/, '');\n\n    if (print[unit]) {\n      return print[unit](a) === print[unit](b)\n    }\n    return null\n  };\n};\n\nvar same = addMethods$2;\n\nconst addMethods$3 = SpaceTime => {\n  const methods = {\n    isAfter: function(d) {\n      d = fns.beADate(d, this);\n      let epoch = fns.getEpoch(d);\n      if (epoch === null) {\n        return null\n      }\n      return this.epoch > epoch\n    },\n    isBefore: function(d) {\n      d = fns.beADate(d, this);\n      let epoch = fns.getEpoch(d);\n      if (epoch === null) {\n        return null\n      }\n      return this.epoch < epoch\n    },\n    isEqual: function(d) {\n      d = fns.beADate(d, this);\n      let epoch = fns.getEpoch(d);\n      if (epoch === null) {\n        return null\n      }\n      return this.epoch === epoch\n    },\n    isBetween: function(start, end) {\n      start = fns.beADate(start, this);\n      end = fns.beADate(end, this);\n      let startEpoch = fns.getEpoch(start);\n      if (startEpoch === null) {\n        return null\n      }\n      let endEpoch = fns.getEpoch(end);\n      if (endEpoch === null) {\n        return null\n      }\n      return startEpoch < this.epoch && this.epoch < endEpoch\n    }\n  };\n\n  //hook them into proto\n  Object.keys(methods).forEach(k => {\n    SpaceTime.prototype[k] = methods[k];\n  });\n};\n\nvar compare = addMethods$3;\n\nconst addMethods$4 = SpaceTime => {\n  const methods = {\n    i18n: data => {\n      //change the day names\n      if (fns.isObject(data.days)) {\n        days.set(data.days);\n      }\n      //change the month names\n      if (fns.isObject(data.months)) {\n        months.set(data.months);\n      }\n    }\n  };\n\n  //hook them into proto\n  Object.keys(methods).forEach(k => {\n    SpaceTime.prototype[k] = methods[k];\n  });\n};\n\nvar i18n = addMethods$4;\n\nlet timezones = unpack;\n\n//fake timezone-support, for fakers (es5 class)\nconst SpaceTime = function(input$1, tz, options = {}) {\n  //the holy moment\n  this.epoch = null;\n  //the shift for the given timezone\n  this.tz = find(tz, timezones);\n  //whether to output warnings to console\n  this.silent = options.silent || true;\n  // favour british interpretation of 02/02/2018, etc\n  this.british = options.dmy || options.british;\n\n  //does the week start on sunday, or monday:\n  this._weekStart = 1; //default to monday\n  if (options.weekStart !== undefined) {\n    this._weekStart = options.weekStart;\n  }\n  //add getter/setters\n  Object.defineProperty(this, 'd', {\n    //return a js date object\n    get: function() {\n      let offset = quick(this);\n      //every computer is somewhere- get this computer's built-in offset\n      let bias = new Date(this.epoch).getTimezoneOffset() || 0;\n      //movement\n      let shift = bias + offset * 60; //in minutes\n      shift = shift * 60 * 1000; //in ms\n      //remove this computer's offset\n      let epoch = this.epoch + shift;\n      let d = new Date(epoch);\n      return d\n    }\n  });\n  //add this data on the object, to allow adding new timezones\n  Object.defineProperty(this, 'timezones', {\n    get: () => timezones,\n    set: obj => {\n      timezones = obj;\n      return obj\n    }\n  });\n  //parse the various formats\n  if (input$1 !== undefined || input$1 === null) {\n    let tmp = input(this, input$1, tz);\n    this.epoch = tmp.epoch;\n  }\n};\n\n//(add instance methods to prototype)\nObject.keys(methods_1).forEach(k => {\n  SpaceTime.prototype[k] = methods_1[k];\n});\n\n// ¯\\_(ツ)_/¯\nSpaceTime.prototype.clone = function() {\n  return new SpaceTime(this.epoch, this.tz, {\n    silent: this.silent,\n    weekStart: this._weekStart\n  })\n};\n\n//append more methods\nquery(SpaceTime);\nadd(SpaceTime);\nsame(SpaceTime);\ncompare(SpaceTime);\ni18n(SpaceTime);\n\nvar spacetime = SpaceTime;\n\n// const timezones = require('../data');\n\nconst whereIts = (a, b) => {\n  let start = new spacetime(null);\n  let end = new spacetime(null);\n  start = start.time(a);\n  //if b is undefined, use as 'within one hour'\n  if (b) {\n    end = end.time(b);\n  } else {\n    end = start.add(59, 'minutes');\n  }\n\n  let startHour = start.hour();\n  let endHour = end.hour();\n  let tzs = Object.keys(start.timezones).filter(tz => {\n    if (tz.indexOf('/') === -1) {\n      return false\n    }\n    let m = new spacetime(null, tz);\n    let hour = m.hour();\n    //do 'calendar-compare' not real-time-compare\n    if (hour >= startHour && hour <= endHour) {\n      //test minutes too, if applicable\n      if (hour === startHour && m.minute() < start.minute()) {\n        return false\n      }\n      if (hour === endHour && m.minute() > end.minute()) {\n        return false\n      }\n      return true\n    }\n    return false\n  });\n  return tzs\n};\nvar whereIts_1 = whereIts;\n\nvar _version = '6.3.0';\n\nconst main$1 = (input, tz, options) => new spacetime(input, tz, options);\n\n//some helper functions on the main method\nmain$1.now = (tz, options) => new spacetime(new Date().getTime(), tz, options);\nmain$1.today = (tz, options) => {\n  let s = new spacetime(new Date().getTime(), tz, options);\n  return s.startOf('day')\n};\nmain$1.tomorrow = (tz, options) => {\n  let s = new spacetime(new Date().getTime(), tz, options);\n  return s.add(1, 'day').startOf('day')\n};\nmain$1.yesterday = (tz, options) => {\n  let s = new spacetime(new Date().getTime(), tz, options);\n  return s.subtract(1, 'day').startOf('day')\n};\nmain$1.extend = function(obj) {\n  Object.keys(obj).forEach(k => {\n    spacetime.prototype[k] = obj[k];\n  });\n  return this\n};\n//find tz by time\nmain$1.whereIts = whereIts_1;\nmain$1.version = _version;\n\n//aliases:\nmain$1.plugin = main$1.extend;\nvar src = main$1;\n\nexport default src;\n","const knownUnits = {\n  second: true,\n  minute: true,\n  hour: true,\n  day: true,\n  week: true,\n  month: true,\n  season: true,\n  quarter: true,\n  year: true,\n}\n\n//turn '5 weeks before' to {weeks:5}\nconst parseShift = function(doc) {\n  let result = {}\n  let m = doc.match('#DateShift+')\n  if (m.found === false) {\n    return result\n  }\n  m.match('#Cardinal #Duration').forEach(ts => {\n    let num = ts.match('#Cardinal').text('normal')\n    num = parseFloat(num)\n    if (num && typeof num === 'number') {\n      let unit = ts.match('#Duration').text('normal')\n      unit = unit.replace(/s$/, '')\n      if (unit && knownUnits.hasOwnProperty(unit)) {\n        result[unit] = num\n      }\n    }\n  })\n  //is it 2 weeks before?  → -2\n  if (m.has('before$') === true) {\n    Object.keys(result).forEach(k => (result[k] *= -1))\n  }\n  // finally, remove it from our text\n  doc.remove('#DateShift')\n  return result\n}\nmodule.exports = parseShift\n","const spacetime = require('spacetime')\n//hmmm: 'june 5th between 9 and 10am'\n\nconst halfPast = function(m, s) {\n  let hour = m.match('#Cardinal$').text('reduced')\n\n  let term = m.match('(half|quarter|25|15|10|5)')\n  let mins = term.text('reduced')\n  if (term.has('half')) {\n    mins = '30'\n  }\n  if (term.has('quarter')) {\n    mins = '15'\n  }\n  let behind = m.has('to')\n  // apply it\n  s = s.hour(hour)\n  s = s.startOf('hour')\n  if (behind) {\n    s = s.subtract(mins, 'minutes')\n  } else {\n    s = s.add(mins, 'minutes')\n  }\n  return s\n}\n\nconst parseTime = function(doc, context) {\n  let time = doc.match('(at|by|for|before)? #Time+')\n  if (time.found) {\n    doc.remove(time)\n  }\n  // get the main part of the time\n  time = time.not('(at|by|for|before|sharp)')\n  time = time.not('on the dot')\n  let s = spacetime.now(context.timezone)\n  let now = s.clone()\n\n  // '5 oclock'\n  let m = time.match('^#Cardinal oclock (am|pm)?')\n  if (m.found) {\n    m = m.not('oclock')\n    s = s.hour(m.text('reduced'))\n    if (s.isValid() && !s.isEqual(now)) {\n      return s.time()\n    }\n  }\n\n  // 'quarter to two'\n  m = time.match('(half|quarter|25|15|10|5) (past|after|to) #Cardinal')\n  if (m.found) {\n    s = halfPast(m, s)\n    if (s.isValid() && !s.isEqual(now)) {\n      return s.time()\n    }\n  }\n  // parse random a time like '4:54pm'\n  let str = time.text('reduced')\n  s = s.time(str)\n  if (s.isValid() && !s.isEqual(now)) {\n    return s.time()\n  }\n  return null\n}\nmodule.exports = parseTime\n","// interpret 'this halloween' or 'next june'\nconst parseRelative = function(doc) {\n  let rel = null\n  if (doc.has('^this? (next|upcoming)')) {\n    rel = 'next'\n  }\n  if (doc.has('^this? (last|previous)')) {\n    rel = 'last'\n  }\n  if (doc.has('^(this|current)')) {\n    rel = 'this'\n  }\n  // finally, remove it from our text\n  doc.remove('^(this|current|next|upcoming|last|previous)')\n  return rel\n}\nmodule.exports = parseRelative\n","const spacetime = require('spacetime')\n\nclass Unit {\n  constructor(input, unit, context) {\n    this.unit = unit || 'day'\n    context = context || {}\n    // set it to the beginning of the given unit\n    let d = spacetime(input, context.timezone)\n\n    // set to beginning\n    if (d.isValid()) {\n      d = d.startOf(this.unit)\n    }\n    Object.defineProperty(this, 'd', {\n      enumerable: false,\n      writable: true,\n      value: d,\n    })\n    Object.defineProperty(this, 'context', {\n      enumerable: false,\n      writable: true,\n      value: context,\n    })\n  }\n  // make a new one\n  clone() {\n    let d = new Unit(this.d, this.unit, this.context)\n    return d\n  }\n  log() {\n    console.log('--')\n    this.d.log()\n    console.log('\\n')\n    return this\n  }\n  applyShift(obj) {\n    Object.keys(obj).forEach(k => {\n      this.d = this.d.add(obj[k], k)\n    })\n    return this\n  }\n  applyTime(str) {\n    if (str) {\n      this.d = this.d.time(str)\n    } else {\n      this.d = this.d.startOf('day') //zero-out time\n    }\n    return this\n  }\n  format(fmt) {\n    return this.d.format(fmt)\n  }\n  start() {\n    this.d = this.d.startOf(this.unit)\n    return this\n  }\n  end() {\n    this.d = this.d.endOf(this.unit)\n    return this\n  }\n  // 'before 2019'\n  before() {\n    this.d = spacetime.now(this.context.timezone) // ???\n    return this\n  }\n  // 'after 2019'\n  after() {\n    this.d = this.d.add(1, this.unit)\n    this.d = this.d.startOf(this.unit)\n    return this\n  }\n  // tricky: 'next june' 'next tuesday'\n  next() {\n    this.d = this.d.add(1, this.unit)\n    this.d = this.d.startOf(this.unit)\n    return this\n  }\n  // tricky: 'last june' 'last tuesday'\n  last() {\n    this.d = this.d.minus(1, this.unit)\n    this.d = this.d.startOf(this.unit)\n    return this\n  }\n}\nmodule.exports = Unit\n","const spacetime = require('spacetime')\nconst Unit = require('./Unit')\n\nclass Day extends Unit {\n  constructor(input, unit, context) {\n    super(input, unit, context)\n    this.unit = 'day'\n  }\n}\nclass Month extends Unit {\n  constructor(input, unit, context) {\n    super(input, unit, context)\n    this.unit = 'month'\n  }\n}\nclass Quarter extends Unit {\n  constructor(input, unit, context) {\n    super(input, unit, context)\n    this.unit = 'quarter'\n  }\n}\nclass Year extends Unit {\n  constructor(input, unit, context) {\n    super(input, unit, context)\n    this.unit = 'year'\n  }\n}\nclass WeekDay extends Unit {\n  constructor(input, unit, context) {\n    super(input, unit, context)\n    this.unit = 'week'\n    this.d = this.d.day(input)\n    this.weekDay = this.d.dayName()\n    //assume a wednesday in the future\n    if (this.d.date() < spacetime.now(context.timezone).date()) {\n      this.d = this.d.add(7, 'days')\n    }\n  }\n  next() {\n    this.d = this.d.add(7, 'days')\n    this.d = this.d.day(this.weekDay)\n    return this\n  }\n  last() {\n    this.d = this.d.minus(7, 'days')\n    this.d = this.d.day(this.weekDay)\n    return this\n  }\n}\n// like 'feb 2'\nclass CalendarDate extends Unit {\n  constructor(input, unit, context) {\n    super(input, unit, context)\n    this.unit = 'day'\n  }\n  next() {\n    this.d = this.d.add(1, 'year')\n    return this\n  }\n  last() {\n    this.d = this.d.minus(1, 'year')\n    return this\n  }\n}\n\nmodule.exports = {\n  Unit: Unit,\n  Day: Day,\n  Month: Month,\n  Quarter: Quarter,\n  Year: Year,\n  WeekDay: WeekDay,\n  CalendarDate: CalendarDate,\n}\n","const units = require('./units')\nconst mapping = {\n  week: units.Week,\n  month: units.Month,\n  quarter: units.Quarter,\n  year: units.Year,\n  season: units.Season,\n}\n\n// when a unit of time is spoken of as 'this month' - instead of 'february'\nconst namedUnit = function(doc, context) {\n  //this month, last quarter, next year\n  let m = doc.match('(weekday|week|month|quarter|season|year)')\n  if (m.found === true) {\n    let str = m.lastTerm().text('reduced')\n    if (mapping.hasOwnProperty(str)) {\n      let Model = mapping[str]\n      if (!Model) {\n        return null\n      }\n      let unit = new Model(null, str, context)\n      return unit\n    }\n  }\n\n  //try this version - 'next friday, last thursday'\n  m = doc.match('(monday|tuesday|wednesday|thursday|friday|saturday|sunday)')\n  if (m.found === true) {\n    let str = m.lastTerm().text('reduced')\n    let unit = new units.WeekDay(str, null, context)\n    return unit\n  }\n  return null\n}\nmodule.exports = namedUnit\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('spacetime')) :\n  typeof define === 'function' && define.amd ? define(['spacetime'], factory) :\n  (global = global || self, global.spacetimeHoliday = factory(global.spacetime));\n}(this, function (spacetime) { 'use strict';\n\n  spacetime = spacetime && spacetime.hasOwnProperty('default') ? spacetime['default'] : spacetime;\n\n  //yep,\n  var jan = 'january';\n  var feb = 'february';\n  var mar = 'march';\n  var apr = 'april';\n  var may = 'may';\n  var jun = 'june';\n  var jul = 'july';\n  var aug = 'august';\n  var sep = 'september';\n  var oct = 'october';\n  var nov = 'november';\n  var dec = 'december';\n  var fixedHolidays = {\n    'new years eve': [dec, 31],\n    'new years': [jan, 1],\n    'new years day': [jan, 1],\n    'inauguration day': [jan, 20],\n    'australia day': [jan, 26],\n    'national freedom day': [feb, 1],\n    'groundhog day': [feb, 2],\n    'rosa parks day': [feb, 4],\n    'valentines day': [feb, 14],\n    'saint valentines day': [feb, 14],\n    'st valentines day ': [feb, 14],\n    'saint patricks day': [mar, 17],\n    'st patricks day': [mar, 17],\n    'april fools': [apr, 1],\n    'april fools day': [apr, 1],\n    'emancipation day': [apr, 16],\n    'tax day': [apr, 15],\n    //US\n    'labour day': [may, 1],\n    'cinco de mayo': [may, 5],\n    'national nurses day': [may, 6],\n    'harvey milk day': [may, 22],\n    'victoria day': [may, 24],\n    juneteenth: [jun, 19],\n    'canada day': [jul, 1],\n    'independence day': [jul, 4],\n    'independents day': [jul, 4],\n    'bastille day': [jul, 14],\n    'purple heart day': [aug, 7],\n    'womens equality day': [aug, 26],\n    '16 de septiembre': [sep, 16],\n    'dieciseis de septiembre': [sep, 16],\n    'grito de dolores': [sep, 16],\n    halloween: [oct, 31],\n    'all hallows eve': [oct, 31],\n    'day of the dead': [oct, 31],\n    // Ranged holiday [nov, 2],\n    'dia de muertos': [oct, 31],\n    // Ranged holiday [nov, 2],\n    'veterans day': [nov, 11],\n    'st andrews day': [nov, 30],\n    'saint andrews day': [nov, 30],\n    'all saints day': [nov, 1],\n    'all sts day': [nov, 1],\n    'armistice day': [nov, 11],\n    'rememberance day': [nov, 11],\n    'christmas eve': [dec, 24],\n    christmas: [dec, 25],\n    xmas: [dec, 25],\n    'boxing day': [dec, 26],\n    'st stephens day': [dec, 26],\n    'saint stephens day': [dec, 26],\n    // Fixed religious and cultural holidays\n    // Catholic + Christian\n    epiphany: [jan, 6],\n    'orthodox christmas day': [jan, 7],\n    'orthodox new year': [jan, 14],\n    'assumption of mary': [aug, 15],\n    'all souls day': [nov, 2],\n    'feast of the immaculate conception': [dec, 8],\n    'feast of our lady of guadalupe': [dec, 12],\n    // Kwanzaa\n    kwanzaa: [dec, 26],\n    // Ranged holiday [jan, 1],\n    // Pagan / metal 🤘\n    imbolc: [feb, 2],\n    beltaine: [may, 1],\n    lughnassadh: [aug, 1],\n    samhain: [oct, 31]\n  };\n\n  var fixedDates = function fixedDates(str, normal, year) {\n    if (fixedHolidays.hasOwnProperty(str) || fixedHolidays.hasOwnProperty(normal)) {\n      var arr = fixedHolidays[str] || fixedHolidays[normal] || [];\n      var s = spacetime.now();\n      s = s.year(year);\n      s = s.startOf('year');\n      s = s.month(arr[0]);\n      s = s.date(arr[1]);\n\n      if (s.isValid()) {\n        return s;\n      }\n    }\n\n    return null;\n  };\n\n  var _01FixedDates = fixedDates;\n\n  //these are holidays on the 'nth weekday of month'\n  var jan$1 = 'january';\n  var feb$1 = 'february';\n  var mar$1 = 'march'; // const apr = 'april'\n\n  var may$1 = 'may';\n  var jun$1 = 'june'; // const jul = 'july'\n  // const aug = 'august'\n\n  var sep$1 = 'september';\n  var oct$1 = 'october';\n  var nov$1 = 'november'; // const dec = 'december'\n\n  var mon = 'monday'; // const tues = 'tuesday'\n  // const wed = 'wednesday'\n\n  var thurs = 'thursday';\n  var fri = 'friday'; // const sat = 'saturday'\n\n  var sun = 'sunday';\n  var holidays = {\n    'martin luther king day': [3, mon, jan$1],\n    //[third monday in january],\n    'presidents day': [3, mon, feb$1],\n    //[third monday in february],\n    'commonwealth day': [2, mon, mar$1],\n    //[second monday in march],\n    'mothers day': [2, sun, may$1],\n    //[second Sunday in May],\n    'fathers day': [3, sun, jun$1],\n    //[third Sunday in June],\n    'labor day': [1, mon, sep$1],\n    //[first monday in september],\n    'columbus day': [2, mon, oct$1],\n    //[second monday in october],\n    'canadian thanksgiving': [2, mon, oct$1],\n    //[second monday in october],\n    thanksgiving: [4, thurs, nov$1],\n    // [fourth Thursday in November],\n    'black friday': [4, fri, nov$1] //[fourth friday in november],\n    // 'memorial day': [may], //[last monday in may],\n    // 'us election': [nov], // [Tuesday following the first Monday in November],\n    // 'cyber monday': [nov]\n    // 'advent': [] // fourth Sunday before Christmas\n\n  }; // add aliases\n\n  holidays['turday day'] = holidays.thanksgiving;\n  holidays['indigenous peoples day'] = holidays['columbus day'];\n  holidays['mlk day'] = holidays['martin luther king day'];\n  var calendarHolidays = holidays;\n\n  var fixedDates$1 = function fixedDates(str, normal, year) {\n    if (calendarHolidays.hasOwnProperty(str) || calendarHolidays.hasOwnProperty(normal)) {\n      var arr = calendarHolidays[str] || calendarHolidays[normal] || [];\n      var s = spacetime.now();\n      s = s.year(year); // [3rd, 'monday', 'january']\n\n      s = s.month(arr[2]);\n      s = s.startOf('month'); // make it january\n\n      var month = s.month(); // make it the 1st monday\n\n      s = s.day(arr[1]);\n\n      if (s.month() !== month) {\n        s = s.add(1, 'week');\n      } // make it nth monday\n\n\n      if (arr[0] > 1) {\n        s = s.add(arr[0] - 1, 'week');\n      }\n\n      if (s.isValid()) {\n        return s;\n      }\n    }\n\n    return null;\n  };\n\n  var _02NthWeekday = fixedDates$1;\n\n  // https://www.timeanddate.com/calendar/determining-easter-date.html\n  var dates = {\n    easter: 0,\n    'ash wednesday': -46,\n    // (46 days before easter)\n    'palm sunday': 7,\n    // (1 week before easter)\n    'maundy thursday': -3,\n    // (3 days before easter)\n    'good friday': -2,\n    // (2 days before easter)\n    'holy saturday': -1,\n    // (1 days before easter)\n    'easter saturday': -1,\n    // (1 day before easter)\n    'easter monday': 1,\n    // (1 day after easter)\n    'ascension day': 39,\n    // (39 days after easter)\n    'whit sunday': 49,\n    // / pentecost (49 days after easter)\n    'whit monday': 50,\n    // (50 days after easter)\n    'trinity sunday': 65,\n    // (56 days after easter)\n    'corpus christi': 60,\n    // (60 days after easter)\n    'mardi gras': -47 //(47 days before easter)\n\n  };\n  dates['easter sunday'] = dates.easter;\n  dates['pentecost'] = dates['whit sunday'];\n  dates['whitsun'] = dates['whit sunday'];\n  var easterHolidays = dates;\n\n  // by John Dyer\n  // based on the algorithm by Oudin (1940) from http://www.tondering.dk/claus/cal/easter.php\n  var calcEaster = function calcEaster(year) {\n    var f = Math.floor,\n        // Golden Number - 1\n    G = year % 19,\n        C = f(year / 100),\n        // related to Epact\n    H = (C - f(C / 4) - f((8 * C + 13) / 25) + 19 * G + 15) % 30,\n        // number of days from 21 March to the Paschal full moon\n    I = H - f(H / 28) * (1 - f(29 / (H + 1)) * f((21 - G) / 11)),\n        // weekday for the Paschal full moon\n    J = (year + f(year / 4) + I + 2 - C + f(C / 4)) % 7,\n        // number of days from 21 March to the Sunday on or before the Paschal full moon\n    L = I - J,\n        month = 3 + f((L + 40) / 44),\n        date = L + 28 - 31 * f(month / 4);\n    month = month === 4 ? 'April' : 'March';\n    return month + ' ' + date;\n  };\n\n  var calcEaster_1 = calcEaster;\n\n  var easterDates = function easterDates(str, normal, year) {\n    if (easterHolidays.hasOwnProperty(str) || easterHolidays.hasOwnProperty(normal)) {\n      var days = easterHolidays[str] || easterHolidays[normal] || [];\n      var date = calcEaster_1(year);\n\n      if (!date) {\n        return null; //no easter for this year\n      }\n\n      var e = spacetime(date);\n      e = e.year(year);\n      var s = e.add(days, 'day');\n\n      if (s.isValid()) {\n        return s;\n      }\n    }\n\n    return null;\n  };\n\n  var _03EasterDates = easterDates;\n\n  // http://www.astropixels.com/ephemeris/soleq2001.html\n  // years 2000-2100\n  var exceptions = {\n    spring: [2003, 2007, 2044, 2048, 2052, 2056, 2060, 2064, 2068, 2072, 2076, 2077, 2080, 2081, 2084, 2085, 2088, 2089, 2092, 2093, 2096, 2097],\n    summer: [2021, 2016, 2020, 2024, 2028, 2032, 2036, 2040, 2041, 2044, 2045, 2048, 2049, 2052, 2053, 2056, 2057, 2060, 2061, 2064, 2065, 2068, 2069, 2070, 2072, 2073, 2074, 2076, 2077, 2078, 2080, 2081, 2082, 2084, 2085, 2086, 2088, 2089, 2090, 2092, 2093, 2094, 2096, 2097, 2098, 2099],\n    fall: [2002, 2003, 2004, 2006, 2007, 2010, 2011, 2014, 2015, 2018, 2019, 2022, 2023, 2026, 2027, 2031, 2035, 2039, 2043, 2047, 2051, 2055, 2059, 2092, 2096],\n    winter: [2002, 2003, 2006, 2007, 2011, 2015, 2019, 2023, 2027, 2031, 2035, 2039, 2043, 2080, 2084, 2088, 2092, 2096]\n  };\n  var winter20th = [2080, 2084, 2088, 2092, 2096];\n\n  var calcSeasons = function calcSeasons(year) {\n    // most common defaults\n    var res = {\n      spring: 'March 20 ' + year,\n      summer: 'June 21 ' + year,\n      fall: 'Sept 22 ' + year,\n      winter: 'Dec 21 ' + year\n    };\n\n    if (exceptions.spring.indexOf(year) !== -1) {\n      res.spring = 'March 19 ' + year;\n    }\n\n    if (exceptions.summer.indexOf(year) !== -1) {\n      res.summer = 'June 20 ' + year;\n    }\n\n    if (exceptions.fall.indexOf(year) !== -1) {\n      res.fall = 'Sept 21 ' + year;\n    } // winter can be 20th, 21st, or 22nd\n\n\n    if (exceptions.winter.indexOf(year) !== -1) {\n      res.winter = 'Dec 22 ' + year;\n    }\n\n    if (winter20th.indexOf(year) !== -1) {\n      res.winter = 'Dec 20 ' + year;\n    }\n\n    return res;\n  };\n\n  var seasons = calcSeasons;\n\n  // these are properly calculated in ./lib/seasons\n  var dates$1 = {\n    'spring equinox': 'spring',\n    'summer solistice': 'summer',\n    'fall equinox': 'fall',\n    'winter solstice': 'winter'\n  }; // aliases\n\n  dates$1['march equinox'] = dates$1['spring equinox'];\n  dates$1['vernal equinox'] = dates$1['spring equinox'];\n  dates$1['ostara'] = dates$1['spring equinox'];\n  dates$1['june solstice'] = dates$1['summer solistice'];\n  dates$1['litha'] = dates$1['summer solistice'];\n  dates$1['autumn equinox'] = dates$1['fall equinox'];\n  dates$1['autumnal equinox'] = dates$1['fall equinox'];\n  dates$1['september equinox'] = dates$1['fall equinox'];\n  dates$1['sept equinox'] = dates$1['fall equinox'];\n  dates$1['mabon'] = dates$1['fall equinox'];\n  dates$1['december solstice'] = dates$1['winter solistice'];\n  dates$1['dec solstice'] = dates$1['winter solistice'];\n  dates$1['yule'] = dates$1['winter solistice'];\n  var astroHolidays = dates$1;\n\n  var astroDates = function astroDates(str, normal, year) {\n    if (astroHolidays.hasOwnProperty(str) || astroHolidays.hasOwnProperty(normal)) {\n      var season = astroHolidays[str] || astroHolidays[normal];\n      var seasons$1 = seasons(year);\n\n      if (!season || !seasons$1 || !seasons$1[season]) {\n        return null; // couldn't figure it out\n      }\n\n      var s = spacetime(seasons$1[season]);\n\n      if (s.isValid()) {\n        return s;\n      }\n    }\n\n    return null;\n  };\n\n  var _04Astronomical = astroDates;\n\n  var dates$2 = {\n    // Muslim holidays\n    'isra and miraj': 'april 13',\n    'lailat al-qadr': 'june 10',\n    'eid al-fitr': 'june 15',\n    'id al-Fitr': 'june 15',\n    'eid ul-Fitr': 'june 15',\n    ramadan: 'may 16',\n    // Range holiday\n    'eid al-adha': 'sep 22',\n    muharram: 'sep 12',\n    'prophets birthday': 'nov 21'\n  };\n  var lunarHolidays = dates$2;\n\n  var dayDiff = -10.64;\n\n  var lunarDates = function lunarDates(str, normal, year) {\n    if (lunarHolidays.hasOwnProperty(str) || lunarHolidays.hasOwnProperty(normal)) {\n      var date = lunarHolidays[str] || lunarHolidays[normal] || [];\n\n      if (!date) {\n        return null;\n      } // start at 2018\n\n\n      var s = spacetime(date + ' 2018');\n      var diff = year - 2018;\n      var toAdd = diff * dayDiff;\n      s = s.add(toAdd, 'day');\n      s = s.startOf('day'); // now set the correct year\n\n      s = s.year(year);\n\n      if (s.isValid()) {\n        return s;\n      }\n    }\n\n    return null;\n  };\n\n  var _05LunarDates = lunarDates;\n\n  var nowYear = spacetime.now().year();\n\n  var spacetimeHoliday = function spacetimeHoliday(str, year) {\n    year = year || nowYear;\n    str = str || '';\n    str = String(str);\n    str = str.trim().toLowerCase();\n    str = str.replace(/'s/, 's'); // 'mother's day'\n\n    var normal = str.replace(/ day$/, '');\n    normal = normal.replace(/^the /, '');\n    normal = normal.replace(/^orthodox /, ''); //orthodox good friday\n    // try easier, unmoving holidays\n\n    var s = _01FixedDates(str, normal, year);\n\n    if (s !== null) {\n      return s;\n    } // try 'nth monday' holidays\n\n\n    s = _02NthWeekday(str, normal, year);\n\n    if (s !== null) {\n      return s;\n    } // easter-based holidays\n\n\n    s = _03EasterDates(str, normal, year);\n\n    if (s !== null) {\n      return s;\n    } // solar-based holidays\n\n\n    s = _04Astronomical(str, normal, year);\n\n    if (s !== null) {\n      return s;\n    } // mostly muslim holidays\n\n\n    s = _05LunarDates(str, normal, year);\n\n    if (s !== null) {\n      return s;\n    }\n\n    return null;\n  };\n\n  var src = spacetimeHoliday;\n\n  return src;\n\n}));\n//# sourceMappingURL=spacetime-holiday.js.map\n","const units = require('./units')\nconst spacetimeHoliday = require('spacetime-holiday')\n\nconst parseHoliday = function(doc, context) {\n  let d = null\n  let str = doc.match('#Holiday+').text('reduced')\n  let year = 2020 //change me!\n  let s = spacetimeHoliday(str, year)\n  if (s !== null) {\n    d = new units.CalendarDate(s, null, context)\n  }\n  return d\n}\nmodule.exports = parseHoliday\n","const { Unit, Day, CalendarDate } = require('./units')\n\nconst knownWord = {\n  today: context => new Day(context.today, null, context),\n  yesterday: context => {\n    new Day(context.today.minus(1, 'day'), null, context)\n  },\n  tomorrow: context => {\n    new Day(context.today.plus(1, 'day'), null, context)\n  },\n}\n\n// parse things like 'june 5th 2019'\nconst parseExplicit = function(doc, context) {\n  // 'fifth of june'\n  if (doc.has('#Value of #Month')) {\n    let obj = {\n      month: doc.match('#Month').text(),\n      date: doc.match('[#Value] of #Month').text(),\n      year: context.today.year(),\n    }\n    let d = new CalendarDate(obj, null, context)\n    if (d.d.isValid() === true) {\n      return d\n    }\n  }\n\n  let str = doc.text('reduced')\n  // today, yesterday, tomorrow\n  if (knownWord.hasOwnProperty(str) === true) {\n    let d = knownWord[str](context)\n    return d\n  }\n\n  // punt it to spacetime, for the heavy-lifting\n  let d = new Unit(str, null, context)\n  // console.log(context.d.format('nice-year'))\n  // did we find a date?\n  if (d.d.isValid() === false) {\n    return null\n  }\n  return d\n}\nmodule.exports = parseExplicit\n","const parseShift = require('./tokenize/01-shift')\nconst parseTime = require('./tokenize/02-time')\nconst parseRelative = require('./tokenize/03-relative')\n\nconst namedUnit = require('./01-namedUnit')\nconst parseHoliday = require('./02-holidays')\nconst explicit = require('./03-explicit')\nconst { Unit } = require('./units')\n\nconst parseDate = function(doc, context) {\n  let shift = parseShift(doc)\n  let time = parseTime(doc, context)\n  let rel = parseRelative(doc)\n  let d = null\n\n  if (doc.found === false) {\n    // do we have just a time?\n    if (time !== null) {\n      d = new Unit(context.today, null, context) // choose today\n    }\n    //do we just have a shift?\n    if (Object.keys(shift).length > 0) {\n      d = new Unit(context.today, null, context) // choose today\n    }\n  }\n\n  // this month\n  d = d || namedUnit(doc, context)\n  // this haloween\n  d = d || parseHoliday(doc, context)\n  // this june 2nd\n  d = d || explicit(doc, context)\n  if (!d) {\n    return null\n  }\n\n  // // apply relative\n  if (rel === 'last') {\n    d.last()\n  }\n  if (rel === 'next') {\n    d.next()\n  }\n  // apply shift\n  if (shift) {\n    d.applyShift(shift)\n  }\n\n  // apply time\n  d.applyTime(time)\n\n  return d\n}\nmodule.exports = parseDate\n","const parseDate = require('./toDate')\n\n//\nconst logic = function(doc, context) {\n  // two explicit dates - 'between friday and sunday'\n  let m = doc.match('between * and *')\n  if (m.found) {\n    let start = m\n      .match('between [.*] and')\n      .not('^between')\n      .not('and$')\n    start = parseDate(start, context)\n    let end = m.match('and *').not('^and')\n    end = parseDate(end, context)\n    if (start) {\n      return {\n        start: start,\n        end: end,\n      }\n    }\n  }\n  // two months, one year - 'june 5 to june 7 1998'\n  m = doc.match('#Month #Value to #Month #Value of? #Year')\n  if (m.found) {\n  }\n  // two months, no year - 'june 5 to june 7'\n  m = doc.match('#Month #Value to #Month #Value')\n  if (m.found) {\n  }\n  // one month, one year, first form - 'january 5 to 7 1998'\n  m = doc.match('#Month #Value to #Value of? #Year')\n  if (m.found) {\n  }\n  // one month, one year, second form - '5 to 7 of january 1998'\n  m = doc.match('#Value to #Value of? #Month of? #Year')\n  if (m.found) {\n  }\n  // one month, no year - '5 to 7 of january'\n  m = doc.match('#Value to #Value of? #Month')\n  if (m.found) {\n  }\n  // one month, no year - 'january 5 to 7'\n  m = doc.match('#Month #Value to #Value')\n  if (m.found) {\n  }\n  // 'from A to B'\n  m = doc.match('from? * (to|@hasHyphen|until|upto) [*]')\n  if (m.found) {\n  }\n  // 'before june'\n  m = doc.match('^due (by|before|on|in)? [*]')\n  if (m.found) {\n  }\n  // 'after june'\n  m = doc.match('^(after|following|from) [*]')\n  if (m.found) {\n  }\n  // 'in june'\n  m = doc.match('^(on|during|in) [*]')\n  if (m.found) {\n    let d = parseDate(m, context)\n    if (d) {\n      return {\n        start: d,\n        end: d.clone().end(),\n      }\n    }\n  }\n  //else, try whole thing\n  let d = parseDate(doc, context)\n  return {\n    start: d,\n    end: d.clone().end(),\n  }\n}\nmodule.exports = logic\n","const normalize = require('./01-normalize')\nconst spacetime = require('spacetime')\nconst parseRanges = require('./02-parse-range')\n\nconst parse = function(doc, context) {\n  // validate context a bit\n  context = context || {}\n\n  context.timezone = context.timezone || 'ETC/UTC'\n  context.today = spacetime(context.today, context.timezone)\n  //turn 'five' into 5..\n  doc = normalize(doc)\n  //interpret 'between [A] and [B]'...\n  return parseRanges(doc, context)\n}\nmodule.exports = parse\n","let arr = [\n  ['mon', 'monday'],\n  ['tue', 'tuesday'],\n  ['tues', 'tuesday'],\n  ['wed', 'wednesday'],\n  ['thu', 'thursday'],\n  ['thurs', 'thursday'],\n  ['fri', 'friday'],\n  ['sat', 'saturday'],\n  ['sun', 'sunday'],\n\n  ['jan', 'january'],\n  ['feb', 'february'],\n  ['mar', 'march'],\n  ['apr', 'april'],\n  ['jun', 'june'],\n  ['jul', 'july'],\n  ['aug', 'august'],\n  ['sep', 'september'],\n  ['sept', 'september'],\n  ['oct', 'october'],\n  ['nov', 'november'],\n  ['dec', 'december'],\n]\n\narr = arr.map(a => {\n  return { short: a[0], long: a[1] }\n})\n\nmodule.exports = arr\n","const tagger = require('./tagger')\nconst tags = require('./tags')\nconst words = require('./words')\nconst parse = require('./parse')\nconst abbrevs = require('./abbrevs')\n\nconst addMethods = function(Doc, world) {\n  // our new tags\n  world.addTags(tags)\n  // add info for the date plugin\n  world.addWords(words)\n  // run our tagger\n  world.postProcess(tagger)\n\n  /**  */\n  class Dates extends Doc {\n    constructor(list, from, w) {\n      super(list, from, w)\n      this.context = {}\n    }\n    /** overload the original json with noun information */\n    json(options) {\n      let n = null\n      if (typeof options === 'number') {\n        n = options\n        options = null\n      }\n      options = options || { terms: false }\n      let res = []\n      let format = options.format || 'iso'\n      this.forEach(doc => {\n        let json = doc.json(options)[0]\n        let obj = parse(doc, this.context)\n        let start = obj.start ? obj.start.format(format) : null\n        let end = obj.end ? obj.end.format(format) : null\n        // set iso strings to json result\n        json.date = {\n          start: start,\n          end: end,\n        }\n        // add duration\n        if (start && end) {\n          json.date.duration = obj.start.d.diff(obj.end.d)\n          // we don't need these\n          delete json.date.duration.milliseconds\n          delete json.date.duration.seconds\n        }\n        res.push(json)\n      })\n      if (n !== null) {\n        return res[n]\n      }\n      return res\n    }\n\n    /** render all dates according to a specific format */\n    format(fmt) {\n      this.forEach(doc => {\n        let obj = parse(doc, this.context)\n        let str = ''\n        if (obj.start) {\n          str = obj.start.format(fmt)\n          if (obj.end) {\n            str += ' to ' + obj.start.format(fmt)\n          }\n          doc.replaceWith(str, { keepTags: true, keepCase: false })\n        }\n      })\n      return this\n    }\n    /** replace 'Fri' with 'Friday', etc*/\n    toLongForm() {\n      abbrevs.forEach(a => {\n        this.replace(a.short, a.long, true)\n      })\n      return this\n    }\n    /** replace 'Friday' with 'Fri', etc*/\n    toShortForm() {\n      abbrevs.forEach(a => {\n        this.replace(a.long, a.short, true)\n      })\n      return this\n    }\n  }\n\n  Doc.prototype.dates = function(n) {\n    let context = {}\n    if (n && typeof n === 'object') {\n      context = n\n      n = null\n    }\n    let r = this.clauses()\n    let dates = r.match('#Date+')\n    if (typeof n === 'number') {\n      dates = dates.get(n)\n    }\n    if (typeof n === 'number') {\n      dates = dates.get(n)\n    }\n    let d = new Dates(dates.list, this, this.world)\n    d.context = context\n    return d\n  }\n}\n\nmodule.exports = addMethods\n"],"names":["preps","thisNext","sections","seasons","tagYear","m","reason","found","term","termList","num","parseInt","clean","tag","tagYearSafe","fixDates","doc","match","month","val","ifNo","duration","unTag","season","date","not","cardinal","v","time","here","values","has","dateTagger","sectionTagger","timeTagger","abbr","shiftTagger","fixUp","oops","d","knownDate","lastTerm","terms","methods","require$$0","require$$1","require$$2","require$$3","require$$4","require$$5","require$$6","tagDate","forEach","fn","FinancialQuarter","isA","Season","Year","notA","Duration","Holiday","Timezone","DateShift","lex","data","a","i","length","normalize","clone","numbers","console","warn","toNumber","toCardinal","adverbs","remove","createCommonjsModule","module","exports","getCjsExportFromNamespace","n","fns","isLeapYear","year","isDate","Object","prototype","toString","call","isNaN","valueOf","isArray","input","isObject","zeroPad","str","len","pad","Array","join","titleCase","toUpperCase","substr","ordinal","j","k","String","replace","toLowerCase","trim","getEpoch","tmp","getTime","epoch","beADate","s","set","formatTimezone","offset","delimiter","absOffset","Math","abs","sign","fns_1","fns_2","fns_3","fns_4","fns_5","fns_6","fns_7","fns_8","fns_9","fns_10","fns_11","fns_12","getMonth","getDate","getHours","shouldChange","start","end","defaultOffset","Date","bias","getTimezoneOffset","shift","current","summerTime","quickOffset","zones","timezones","obj","tz","undefined","dst","jul","dec","hem","split","inSummer","quick","_build","_build$1","freeze","_prefixes","all","keys","Number","names","before","name","unpack","fallbackTZ","safeIntl","Intl","DateTimeFormat","format","resolvedOptions","timezone","timeZone","guessTz","guessTz_1","isOffset","isNumber","utcOffset","gmtOffset","toIana","parseOffset","parseOffset_1","local","cities","reduce","h","city","lookupTz","hasOwnProperty","test","id","Error","find","o","millisecond","second","minute","hour","day","week","milliseconds","walk","unit","previous","startUnit","original","diff","halfStep","units","valid","walkTo","getFullYear","seconds","wants","old","silent","walk_1","shortMonths","longMonths","buildMapping","sep","months","mapping","i18n","parseOffset$1","parseFloat","parseOffset_1$1","parseTime","arr","startOf","ampm","parseTime_1","monthLengths","monthLengths_1","hasDate","max","hasDate_1","months$1","parseYear","strFmt","reg","parse","givenTz","options","british","strParse","dates","now","tonight","today","tomorrow","add","yesterday","subtract","christmas","namedDates","minimumEpoch","defaults","handleArray","order","handleObject","assign","parseInput","res","shortDays","longDays","days","isoOffset","isNegative","floor","ceil","_offset","dayName","monthName","hour24","hour12","quarter","era","json","numeric","iso","h24","ms","toISOString","nice","aliases","mdy","dmy","ymd","printFormat","isValid","out","indexOf","_","fmt","format_1","G","GG","GGG","GGGG","y","yy","yyy","yyyy","yyyyy","Q","QQ","QQQ","QQQQ","M","MM","MMM","MMMM","w","ww","dd","D","dayOfYear","DD","DDD","E","EE","EEE","EEEE","EEEEE","e","ee","eee","eeee","eeeee","aa","aaa","aaaa","h12","hh","H","HH","mm","ss","A","z","zz","zzz","zzzz","Z","ZZ","ZZZ","ZZZZ","addAlias","char","to","toName","unixFmt","chars","quoteOn","push","txt","c","unixFmt_1","units$1","doUnit","endOf","percent","toFixed","progress","progress_1","nearest","prog","nearest_1","climb","b","isBefore","isAfter","diffOne","one","fastYear","years","msDiff","minutes","hours","weeks","waterfall","reverseDiff","main","reversed","diff$1","qualifiers","almost","over","getDiff","later","earlier","isSame","u","pluralize","value","slice","since","isNow","every","rounded","qualified","precise","englishValues","englishValue","nextUnit","nextValue","splice","since_1","north","south","quarters","units$2","quarterhour","_weekStart","q","hemisphere","decade","century","startOf_1","isDay","next","result","every_1","parseDst","epochShift","hasDst","Boolean","default_offset","change","back","summer","winter","isDST","timezone_1","units$3","input$1","hasDST","leapYear","last","isAwake","isAsleep","log","logYear","debug","from","fromNow","weekStart","inDST","round","each","methods_1","validate","confirm","want","methods$1","getMilliseconds","getSeconds","getMinutes","hourFloat","which","dayTime","times","morning","breakfast","noon","lunch","afternoon","evening","dinner","night","midnight","_01Time","methods$2","getDay","_02Date","clearMinutes","methods$3","sum","setDate","setFullYear","setHours","setMinutes","setMonth","toAdd","minus","thisOne","skipWeeks","millenium","_03Year","methods$4","addMethods","Space","query","order$1","keep","dstAwareUnits","keepDate","rollMonth","addMethods$1","SpaceTime","plus","print","addMethods$2","same","addMethods$3","isEqual","isBetween","startEpoch","endEpoch","compare","addMethods$4","defineProperty","get","spacetime","whereIts","startHour","endHour","tzs","filter","whereIts_1","_version","main$1","extend","version","plugin","src","knownUnits","parseShift","ts","text","halfPast","mins","behind","context","parseRelative","rel","Unit","enumerable","writable","Day","Month","Quarter","WeekDay","weekDay","CalendarDate","Week","namedUnit","Model","define","feb","apr","nov","parseHoliday","spacetimeHoliday","knownWord","parseExplicit","parseDate","explicit","applyShift","applyTime","logic","parseRanges","map","Doc","world","addTags","tags","addWords","words","postProcess","tagger","Dates","list","replaceWith","keepTags","keepCase","abbrevs","r","clauses"],"mappings":"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"}