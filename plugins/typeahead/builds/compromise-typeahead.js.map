{"version":3,"file":"compromise-typeahead.js","sources":["../src/index.js"],"sourcesContent":["const minSize = 3\n\nconst isObject = function (obj) {\n  return obj && Object.prototype.toString.call(obj) === '[object Object]'\n}\n\nconst allPrefixes = function (arr) {\n  if (!isArray) {\n  }\n  let obj = {}\n  arr.forEach((str) => {\n    str = str.toLowerCase().trim()\n    for (let i = minSize; i < str.length; i += 1) {\n      let prefix = str.substr(0, i)\n      obj[prefix] = str\n    }\n  })\n  return obj\n}\n\nconst isArray = function (arr) {\n  return Object.prototype.toString.call(arr) === '[object Array]'\n}\n\nconst plugin = function (Doc, world, _nlp) {\n  _nlp.typeahead = function (arr = [], opt = {}) {\n    let lex = {}\n    if (isObject(arr)) {\n      lex = arr\n      arr = Object.keys(lex)\n    }\n    world.prefixes = allPrefixes(arr)\n\n    world.postProcess((doc) => {\n      // get end-part of text\n      let end = doc.last()\n      let m = end.terms().last()\n      let json = m.json({ terms: { normal: true } })[0].terms[0]\n      // if we've already put whitespace, end.\n      if (json.post) {\n        return\n      }\n      // if we found something\n      if (world.prefixes.hasOwnProperty(json.normal)) {\n        let found = world.prefixes[json.normal]\n        // add full-word as an implicit result\n        m.termList()[0].implicit = found\n        // tag it too?\n        if (lex.hasOwnProperty(found)) {\n          m.tag(lex[found], 'typeahead')\n        }\n      }\n    })\n  }\n  // alias\n  _nlp.typeAhead = Doc.prototype.typeahead\n}\nmodule.exports = plugin\n"],"names":["minSize","isObject","obj","Object","prototype","toString","call","allPrefixes","arr","forEach","str","toLowerCase","trim","i","length","prefix","substr","plugin","Doc","world","_nlp","typeahead","lex","keys","prefixes","postProcess","doc","end","last","m","terms","json","normal","post","hasOwnProperty","found","termList","implicit","tag","typeAhead"],"mappings":";;;;;;;EAAA,IAAMA,OAAO,GAAG,CAAhB;;EAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAUC,GAAV,EAAe;EAC9B,SAAOA,GAAG,IAAIC,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BJ,GAA/B,MAAwC,iBAAtD;EACD,CAFD;;EAIA,IAAMK,WAAW,GAAG,SAAdA,WAAc,CAAUC,GAAV,EAAe;;EAGjC,MAAIN,GAAG,GAAG,EAAV;EACAM,EAAAA,GAAG,CAACC,OAAJ,CAAY,UAACC,GAAD,EAAS;EACnBA,IAAAA,GAAG,GAAGA,GAAG,CAACC,WAAJ,GAAkBC,IAAlB,EAAN;;EACA,SAAK,IAAIC,CAAC,GAAGb,OAAb,EAAsBa,CAAC,GAAGH,GAAG,CAACI,MAA9B,EAAsCD,CAAC,IAAI,CAA3C,EAA8C;EAC5C,UAAIE,MAAM,GAAGL,GAAG,CAACM,MAAJ,CAAW,CAAX,EAAcH,CAAd,CAAb;EACAX,MAAAA,GAAG,CAACa,MAAD,CAAH,GAAcL,GAAd;EACD;EACF,GAND;EAOA,SAAOR,GAAP;EACD,CAZD;;EAkBA,IAAMe,MAAM,GAAG,SAATA,MAAS,CAAUC,GAAV,EAAeC,KAAf,EAAsBC,IAAtB,EAA4B;EACzCA,EAAAA,IAAI,CAACC,SAAL,GAAiB,YAA8B;EAAA,QAApBb,GAAoB,uEAAd,EAAc;EAC7C,QAAIc,GAAG,GAAG,EAAV;;EACA,QAAIrB,QAAQ,CAACO,GAAD,CAAZ,EAAmB;EACjBc,MAAAA,GAAG,GAAGd,GAAN;EACAA,MAAAA,GAAG,GAAGL,MAAM,CAACoB,IAAP,CAAYD,GAAZ,CAAN;EACD;;EACDH,IAAAA,KAAK,CAACK,QAAN,GAAiBjB,WAAW,CAACC,GAAD,CAA5B;EAEAW,IAAAA,KAAK,CAACM,WAAN,CAAkB,UAACC,GAAD,EAAS;;EAEzB,UAAIC,GAAG,GAAGD,GAAG,CAACE,IAAJ,EAAV;EACA,UAAIC,CAAC,GAAGF,GAAG,CAACG,KAAJ,GAAYF,IAAZ,EAAR;EACA,UAAIG,IAAI,GAAGF,CAAC,CAACE,IAAF,CAAO;EAAED,QAAAA,KAAK,EAAE;EAAEE,UAAAA,MAAM,EAAE;EAAV;EAAT,OAAP,EAAoC,CAApC,EAAuCF,KAAvC,CAA6C,CAA7C,CAAX,CAJyB;;EAMzB,UAAIC,IAAI,CAACE,IAAT,EAAe;EACb;EACD,OARwB;;;EAUzB,UAAId,KAAK,CAACK,QAAN,CAAeU,cAAf,CAA8BH,IAAI,CAACC,MAAnC,CAAJ,EAAgD;EAC9C,YAAIG,KAAK,GAAGhB,KAAK,CAACK,QAAN,CAAeO,IAAI,CAACC,MAApB,CAAZ,CAD8C;;EAG9CH,QAAAA,CAAC,CAACO,QAAF,GAAa,CAAb,EAAgBC,QAAhB,GAA2BF,KAA3B,CAH8C;;EAK9C,YAAIb,GAAG,CAACY,cAAJ,CAAmBC,KAAnB,CAAJ,EAA+B;EAC7BN,UAAAA,CAAC,CAACS,GAAF,CAAMhB,GAAG,CAACa,KAAD,CAAT,EAAkB,WAAlB;EACD;EACF;EACF,KAnBD;EAoBD,GA5BD,CADyC;;;EA+BzCf,EAAAA,IAAI,CAACmB,SAAL,GAAiBrB,GAAG,CAACd,SAAJ,CAAciB,SAA/B;EACD,CAhCD;;SAiCc,GAAGJ;;;;;;;;"}