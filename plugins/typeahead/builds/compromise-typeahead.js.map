{"version":3,"file":"compromise-typeahead.js","sources":["../src/tryPrefix.js","../src/getPrefixes.js","../src/index.js"],"sourcesContent":["const tryPrefix = function (doc, lex) {\n  let world = doc.world\n  world.prefixes = world.prefixes || {}\n  // get end-part of text\n  let end = doc.last()\n  let m = end.terms().last()\n  let json = m.json({ terms: { normal: true } })\n  if (!json[0] || !json[0].terms) {\n    return\n  }\n  json = json[0].terms[0]\n  // if we've already put whitespace, end.\n  if (json.post) {\n    return\n  }\n  // if we found something\n  if (world.prefixes.hasOwnProperty(json.normal)) {\n    let found = world.prefixes[json.normal]\n    // add full-word as an implicit result\n    m.termList()[0].implicit = found\n    // tag it too?\n    if (lex.hasOwnProperty(found)) {\n      m.tag(lex[found], 'typeahead')\n    }\n  }\n}\nmodule.exports = tryPrefix\n","// generate all the possible prefixes up-front\nconst createIndex = function (arr, opts, world) {\n  let index = {}\n  let collisions = []\n  let existing = world.prefixes || {}\n  arr.forEach((str) => {\n    str = str.toLowerCase().trim()\n    let max = str.length\n    if (opts.max && max > opts.max) {\n      max = opts.max\n    }\n    for (let size = opts.min; size < max; size += 1) {\n      let prefix = str.substr(0, size)\n      // ensure prefix is not a word\n      if (opts.safe && world.words.hasOwnProperty(prefix)) {\n        continue\n      }\n      // does it already exist?\n      if (existing.hasOwnProperty(prefix) === true) {\n        collisions.push(prefix)\n        continue\n      }\n      if (index.hasOwnProperty(prefix) === true) {\n        collisions.push(prefix)\n        continue\n      }\n      index[prefix] = str\n    }\n  })\n  // merge with existing prefixes\n  index = Object.assign({}, existing, index)\n  // remove ambiguous-prefixes\n  collisions.forEach((str) => {\n    delete index[str]\n  })\n  return index\n}\nmodule.exports = createIndex\n","const tryPrefix = require('./tryPrefix')\nconst getPrefixes = require('./getPrefixes')\n\nconst isObject = function (obj) {\n  return obj && Object.prototype.toString.call(obj) === '[object Object]'\n}\n\nconst defaults = {\n  safe: true,\n  min: 3,\n}\n\nconst plugin = function (Doc, world, _nlp) {\n  /** add words that can be predicted from their prefix */\n  _nlp.typeahead = function (arr = [], opts = {}) {\n    let lex = {}\n    opts = Object.assign({}, defaults, opts)\n    // wiggle-out our params\n    if (isObject(arr)) {\n      lex = arr\n      arr = Object.keys(lex)\n    }\n    // pre-compute all prefixes\n    world.prefixes = getPrefixes(arr, opts, world)\n    // each keypress, try the end\n    world.postProcess((doc) => {\n      tryPrefix(doc, lex)\n    })\n  }\n  // alias\n  _nlp.typeAhead = Doc.prototype.typeahead\n}\nmodule.exports = plugin\n"],"names":["tryPrefix","doc","lex","world","prefixes","end","last","m","terms","json","normal","post","hasOwnProperty","found","termList","implicit","tag","createIndex","arr","opts","index","collisions","existing","forEach","str","toLowerCase","trim","max","length","size","min","prefix","substr","safe","words","push","Object","assign","isObject","obj","prototype","toString","call","defaults","plugin","Doc","_nlp","typeahead","keys","getPrefixes","postProcess","typeAhead"],"mappings":"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"}